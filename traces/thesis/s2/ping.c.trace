0x55555555550c: => 0x55555555550c <main+4>:	push   %rbp

0x55555555550d: => 0x55555555550d <main+5>:	mov    %rsp,%rbp

0x555555555510: => 0x555555555510 <main+8>:	sub    $0x170,%rsp

0x555555555517: => 0x555555555517 <main+15>:	mov    %edi,-0x164(%rbp)

0x55555555551d: => 0x55555555551d <main+21>:	mov    %rsi,-0x170(%rbp)

0x555555555524: => 0x555555555524 <main+28>:	mov    %fs:0x28,%rax

0x55555555552d: => 0x55555555552d <main+37>:	mov    %rax,-0x8(%rbp)

0x555555555531: => 0x555555555531 <main+41>:	xor    %eax,%eax

0x555555555533: => 0x555555555533 <main+43>:	movq   $0x0,-0xb0(%rbp)

0x55555555553e: => 0x55555555553e <main+54>:	movq   $0x0,-0xa8(%rbp)

0x555555555549: => 0x555555555549 <main+65>:	movw   $0x2,-0xb0(%rbp)

0x555555555552: => 0x555555555552 <main+74>:	lea    -0xa0(%rbp),%rax

0x555555555559: => 0x555555555559 <main+81>:	mov    $0x10,%edx

0x55555555555e: => 0x55555555555e <main+86>:	mov    $0x0,%esi

0x555555555563: => 0x555555555563 <main+91>:	mov    %rax,%rdi

0x555555555566: => 0x555555555566 <main+94>:	callq  0x5555555551c0 <memset@plt>

0x55555555556b: => 0x55555555556b <main+99>:	movw   $0x2,-0xa0(%rbp)

0x555555555574: => 0x555555555574 <main+108>:	mov    -0x170(%rbp),%rax

0x55555555557b: => 0x55555555557b <main+115>:	add    $0x8,%rax

0x55555555557f: => 0x55555555557f <main+119>:	mov    (%rax),%rax

0x555555555582: => 0x555555555582 <main+122>:	lea    -0xa0(%rbp),%rdx

0x555555555589: => 0x555555555589 <main+129>:	add    $0x4,%rdx

0x55555555558d: => 0x55555555558d <main+133>:	mov    %rdx,%rsi

0x555555555590: => 0x555555555590 <main+136>:	mov    %rax,%rdi

0x555555555593: => 0x555555555593 <main+139>:	callq  0x555555555210 <inet_aton@plt>

0x555555555598: => 0x555555555598 <main+144>:	test   %eax,%eax

0x55555555559a: => 0x55555555559a <main+146>:	jne    0x5555555555c6 <main+190>

0x5555555555c6: => 0x5555555555c6 <main+190>:	mov    $0x401,%edi

0x5555555555cb: => 0x5555555555cb <main+195>:	callq  0x555555555190 <htons@plt>

0x5555555555d0: => 0x5555555555d0 <main+200>:	mov    %ax,-0x9e(%rbp)

0x5555555555d7: => 0x5555555555d7 <main+207>:	mov    $0x1,%edx

0x5555555555dc: => 0x5555555555dc <main+212>:	mov    $0x2,%esi

0x5555555555e1: => 0x5555555555e1 <main+217>:	mov    $0x2,%edi

0x5555555555e6: => 0x5555555555e6 <main+222>:	callq  0x555555555290 <socket@plt>

0x5555555555eb: => 0x5555555555eb <main+227>:	mov    %eax,-0x150(%rbp)

0x5555555555f1: => 0x5555555555f1 <main+233>:	cmpl   $0xffffffff,-0x150(%rbp)

0x5555555555f8: => 0x5555555555f8 <main+240>:	jne    0x555555555606 <main+254>

0x555555555606: => 0x555555555606 <main+254>:	lea    -0x154(%rbp),%rdx

0x55555555560d: => 0x55555555560d <main+261>:	lea    -0xb0(%rbp),%rcx

0x555555555614: => 0x555555555614 <main+268>:	mov    -0x150(%rbp),%eax

0x55555555561a: => 0x55555555561a <main+274>:	mov    %rcx,%rsi

0x55555555561d: => 0x55555555561d <main+277>:	mov    %eax,%edi

0x55555555561f: => 0x55555555561f <main+279>:	callq  0x555555555260 <getsockname@plt>

0x555555555624: => 0x555555555624 <main+284>:	cmp    $0xffffffff,%eax

0x555555555627: => 0x555555555627 <main+287>:	jne    0x55555555563f <main+311>

0x55555555563f: => 0x55555555563f <main+311>:	movl   $0x38,-0x14c(%rbp)

0x555555555649: => 0x555555555649 <main+321>:	movl   $0x3c,-0x148(%rbp)

0x555555555653: => 0x555555555653 <main+331>:	movl   $0x4c,-0x144(%rbp)

0x55555555565d: => 0x55555555565d <main+341>:	movl   $0x0,-0x140(%rbp)

0x555555555667: => 0x555555555667 <main+351>:	mov    -0x14c(%rbp),%edx

0x55555555566d: => 0x55555555566d <main+357>:	mov    -0x148(%rbp),%eax

0x555555555673: => 0x555555555673 <main+363>:	add    %eax,%edx

0x555555555675: => 0x555555555675 <main+365>:	mov    -0x144(%rbp),%eax

0x55555555567b: => 0x55555555567b <main+371>:	add    %edx,%eax

0x55555555567d: => 0x55555555567d <main+373>:	mov    %eax,-0x13c(%rbp)

0x555555555683: => 0x555555555683 <main+379>:	mov    -0x13c(%rbp),%eax

0x555555555689: => 0x555555555689 <main+385>:	mov    %eax,%eax

0x55555555568b: => 0x55555555568b <main+387>:	mov    %rax,%rdi

0x55555555568e: => 0x55555555568e <main+390>:	callq  0x555555555220 <malloc@plt>

0x555555555693: => 0x555555555693 <main+395>:	mov    %rax,-0x128(%rbp)

0x55555555569a: => 0x55555555569a <main+402>:	cmpq   $0x0,-0x128(%rbp)

0x5555555556a2: => 0x5555555556a2 <main+410>:	jne    0x5555555556ce <main+454>

0x5555555556ce: => 0x5555555556ce <main+454>:	mov    -0x128(%rbp),%rax

0x5555555556d5: => 0x5555555556d5 <main+461>:	mov    %rax,-0x120(%rbp)

0x5555555556dc: => 0x5555555556dc <main+468>:	mov    -0x120(%rbp),%rax

0x5555555556e3: => 0x5555555556e3 <main+475>:	movb   $0x8,(%rax)

0x5555555556e6: => 0x5555555556e6 <main+478>:	mov    -0x120(%rbp),%rax

0x5555555556ed: => 0x5555555556ed <main+485>:	movb   $0x0,0x1(%rax)

0x5555555556f1: => 0x5555555556f1 <main+489>:	mov    -0x120(%rbp),%rax

0x5555555556f8: => 0x5555555556f8 <main+496>:	movw   $0x0,0x2(%rax)

0x5555555556fe: => 0x5555555556fe <main+502>:	mov    -0x140(%rbp),%eax

0x555555555704: => 0x555555555704 <main+508>:	add    $0x1,%eax

0x555555555707: => 0x555555555707 <main+511>:	movzwl %ax,%eax

0x55555555570a: => 0x55555555570a <main+514>:	mov    %eax,%edi

0x55555555570c: => 0x55555555570c <main+516>:	callq  0x555555555190 <htons@plt>

0x555555555711: => 0x555555555711 <main+521>:	mov    -0x120(%rbp),%rdx

0x555555555718: => 0x555555555718 <main+528>:	mov    %ax,0x6(%rdx)

0x55555555571c: => 0x55555555571c <main+532>:	mov    -0x14c(%rbp),%eax

0x555555555722: => 0x555555555722 <main+538>:	add    $0x8,%eax

0x555555555725: => 0x555555555725 <main+541>:	mov    %eax,-0x138(%rbp)

0x55555555572b: => 0x55555555572b <main+547>:	mov    -0x138(%rbp),%ecx

0x555555555731: => 0x555555555731 <main+553>:	mov    -0x120(%rbp),%rax

0x555555555738: => 0x555555555738 <main+560>:	mov    $0x0,%edx

0x55555555573d: => 0x55555555573d <main+565>:	mov    %ecx,%esi

0x55555555573f: => 0x55555555573f <main+567>:	mov    %rax,%rdi

0x555555555742: => 0x555555555742 <main+570>:	callq  0x555555555493 <in_cksum>

0x555555555747: => 0x555555555747 <main+575>:	mov    -0x120(%rbp),%rdx

0x55555555574e: => 0x55555555574e <main+582>:	mov    %ax,0x2(%rdx)

0x555555555752: => 0x555555555752 <main+586>:	mov    -0x138(%rbp),%eax

0x555555555758: => 0x555555555758 <main+592>:	movslq %eax,%rdx

0x55555555575b: => 0x55555555575b <main+595>:	lea    -0xa0(%rbp),%rcx

0x555555555762: => 0x555555555762 <main+602>:	mov    -0x120(%rbp),%rsi

0x555555555769: => 0x555555555769 <main+609>:	mov    -0x150(%rbp),%eax

0x55555555576f: => 0x55555555576f <main+615>:	mov    $0x10,%r9d

0x555555555775: => 0x555555555775 <main+621>:	mov    %rcx,%r8

0x555555555778: => 0x555555555778 <main+624>:	mov    $0x0,%ecx

0x55555555577d: => 0x55555555577d <main+629>:	mov    %eax,%edi

0x55555555577f: => 0x55555555577f <main+631>:	callq  0x5555555551d0 <sendto@plt>

0x555555555784: => 0x555555555784 <main+636>:	mov    %eax,-0x134(%rbp)

0x55555555578a: => 0x55555555578a <main+642>:	mov    -0x134(%rbp),%eax

0x555555555790: => 0x555555555790 <main+648>:	mov    %eax,%esi

0x555555555792: => 0x555555555792 <main+650>:	lea    0x8d9(%rip),%rdi        # 0x555555556072

0x555555555799: => 0x555555555799 <main+657>:	mov    $0x0,%eax

0x55555555579e: => 0x55555555579e <main+662>:	callq  0x5555555551a0 <printf@plt>

0x5555555557a3: => 0x5555555557a3 <main+667>:	mov    -0x128(%rbp),%rax

0x5555555557aa: => 0x5555555557aa <main+674>:	mov    %rax,-0x100(%rbp)

0x5555555557b1: => 0x5555555557b1 <main+681>:	mov    -0x13c(%rbp),%eax

0x5555555557b7: => 0x5555555557b7 <main+687>:	cltq   

0x5555555557b9: => 0x5555555557b9 <main+689>:	mov    %rax,-0xf8(%rbp)

0x5555555557c0: => 0x5555555557c0 <main+696>:	lea    -0xf0(%rbp),%rax

0x5555555557c7: => 0x5555555557c7 <main+703>:	mov    $0x38,%edx

0x5555555557cc: => 0x5555555557cc <main+708>:	mov    $0x0,%esi

0x5555555557d1: => 0x5555555557d1 <main+713>:	mov    %rax,%rdi

0x5555555557d4: => 0x5555555557d4 <main+716>:	callq  0x5555555551c0 <memset@plt>

0x5555555557d9: => 0x5555555557d9 <main+721>:	lea    -0x90(%rbp),%rax

0x5555555557e0: => 0x5555555557e0 <main+728>:	mov    %rax,-0xf0(%rbp)

0x5555555557e7: => 0x5555555557e7 <main+735>:	movl   $0x80,-0xe8(%rbp)

0x5555555557f1: => 0x5555555557f1 <main+745>:	lea    -0x100(%rbp),%rax

0x5555555557f8: => 0x5555555557f8 <main+752>:	mov    %rax,-0xe0(%rbp)

0x5555555557ff: => 0x5555555557ff <main+759>:	movq   $0x1,-0xd8(%rbp)

0x55555555580a: => 0x55555555580a <main+770>:	movl   $0x100,-0x130(%rbp)

0x555555555814: => 0x555555555814 <main+780>:	mov    -0x130(%rbp),%edx

0x55555555581a: => 0x55555555581a <main+786>:	lea    -0xf0(%rbp),%rcx

0x555555555821: => 0x555555555821 <main+793>:	mov    -0x150(%rbp),%eax

0x555555555827: => 0x555555555827 <main+799>:	mov    %rcx,%rsi

0x55555555582a: => 0x55555555582a <main+802>:	mov    %eax,%edi

0x55555555582c: => 0x55555555582c <main+804>:	callq  0x555555555230 <recvmsg@plt>

0x555555555831: => 0x555555555831 <main+809>:	mov    %eax,-0x138(%rbp)

0x555555555837: => 0x555555555837 <main+815>:	cmpl   $0x0,-0x138(%rbp)

0x55555555583e: => 0x55555555583e <main+822>:	jns    0x555555555856 <main+846>

0x555555555856: => 0x555555555856 <main+846>:	mov    -0xe0(%rbp),%rax

0x55555555585d: => 0x55555555585d <main+853>:	mov    (%rax),%rax

0x555555555860: => 0x555555555860 <main+856>:	mov    %rax,-0x118(%rbp)

0x555555555867: => 0x555555555867 <main+863>:	mov    -0x118(%rbp),%rax

0x55555555586e: => 0x55555555586e <main+870>:	mov    %rax,-0x110(%rbp)

0x555555555875: => 0x555555555875 <main+877>:	mov    -0x138(%rbp),%ecx

0x55555555587b: => 0x55555555587b <main+883>:	mov    -0x110(%rbp),%rax

0x555555555882: => 0x555555555882 <main+890>:	mov    $0x0,%edx

0x555555555887: => 0x555555555887 <main+895>:	mov    %ecx,%esi

0x555555555889: => 0x555555555889 <main+897>:	mov    %rax,%rdi

0x55555555588c: => 0x55555555588c <main+900>:	callq  0x555555555493 <in_cksum>

0x555555555891: => 0x555555555891 <main+905>:	movzwl %ax,%eax

0x555555555894: => 0x555555555894 <main+908>:	mov    %eax,-0x12c(%rbp)

0x55555555589a: => 0x55555555589a <main+914>:	cmpl   $0x0,-0x12c(%rbp)

0x5555555558a1: => 0x5555555558a1 <main+921>:	je     0x5555555558be <main+950>

0x5555555558be: => 0x5555555558be <main+950>:	mov    -0xf0(%rbp),%rax

0x5555555558c5: => 0x5555555558c5 <main+957>:	mov    %rax,-0x108(%rbp)

0x5555555558cc: => 0x5555555558cc <main+964>:	mov    -0x110(%rbp),%rax

0x5555555558d3: => 0x5555555558d3 <main+971>:	movzbl (%rax),%eax

0x5555555558d6: => 0x5555555558d6 <main+974>:	test   %al,%al

0x5555555558d8: => 0x5555555558d8 <main+976>:	jne    0x55555555593c <main+1076>

0x5555555558da: => 0x5555555558da <main+978>:	mov    -0x108(%rbp),%rax

0x5555555558e1: => 0x5555555558e1 <main+985>:	mov    $0x10,%esi

0x5555555558e6: => 0x5555555558e6 <main+990>:	mov    %rax,%rdi

0x5555555558e9: => 0x5555555558e9 <main+993>:	callq  0x555555555389 <pr_addr>

0x5555555558ee: => 0x5555555558ee <main+998>:	mov    %rax,%rdi

0x5555555558f1: => 0x5555555558f1 <main+1001>:	callq  0x555555555170 <puts@plt>

0x5555555558f6: => 0x5555555558f6 <main+1006>:	mov    -0x138(%rbp),%eax

0x5555555558fc: => 0x5555555558fc <main+1012>:	mov    %eax,%esi

0x5555555558fe: => 0x5555555558fe <main+1014>:	lea    0x79c(%rip),%rdi        # 0x5555555560a1

0x555555555905: => 0x555555555905 <main+1021>:	mov    $0x0,%eax

0x55555555590a: => 0x55555555590a <main+1026>:	callq  0x5555555551a0 <printf@plt>

0x55555555590f: => 0x55555555590f <main+1031>:	mov    -0x110(%rbp),%rax

0x555555555916: => 0x555555555916 <main+1038>:	movzwl 0x6(%rax),%eax

0x55555555591a: => 0x55555555591a <main+1042>:	movzwl %ax,%eax

0x55555555591d: => 0x55555555591d <main+1045>:	mov    %eax,%edi

0x55555555591f: => 0x55555555591f <main+1047>:	callq  0x555555555240 <ntohs@plt>

0x555555555924: => 0x555555555924 <main+1052>:	movzwl %ax,%eax

0x555555555927: => 0x555555555927 <main+1055>:	mov    %eax,%esi

0x555555555929: => 0x555555555929 <main+1057>:	lea    0x78d(%rip),%rdi        # 0x5555555560bd

0x555555555930: => 0x555555555930 <main+1064>:	mov    $0x0,%eax

0x555555555935: => 0x555555555935 <main+1069>:	callq  0x5555555551a0 <printf@plt>

0x55555555593a: => 0x55555555593a <main+1074>:	jmp    0x555555555948 <main+1088>

0x555555555948: => 0x555555555948 <main+1088>:	mov    $0x0,%eax

0x55555555594d: => 0x55555555594d <main+1093>:	mov    -0x8(%rbp),%rcx

0x555555555951: => 0x555555555951 <main+1097>:	xor    %fs:0x28,%rcx

0x55555555595a: => 0x55555555595a <main+1106>:	je     0x555555555961 <main+1113>

0x555555555961: => 0x555555555961 <main+1113>:	leaveq 

0x555555555962: => 0x555555555962 <main+1114>:	retq   

0x7ffff7def083: => 0x7ffff7def083 <__libc_start_main+243>:	mov    %eax,%edi

0x7ffff7def085: => 0x7ffff7def085 <__libc_start_main+245>:	callq  0x7ffff7e11a40 <__GI_exit>

