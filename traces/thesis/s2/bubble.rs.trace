0x401b31: => 0x401b31 <main+1>:	mov    %rsi,%rdx

0x401b34: => 0x401b34 <main+4>:	movslq %edi,%rsi

0x401b37: => 0x401b37 <main+7>:	lea    -0xae(%rip),%rdi        # 0x401a90 <_ZN6bubble4main17h7dbc7a8488ce236dE>

0x401b3e: => 0x401b3e <main+14>:	xor    %ecx,%ecx

0x401b40: => 0x401b40 <main+16>:	callq  0x401140 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E>

0x401140: => 0x401140 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E>:	sub    $0x18,%rsp

0x401144: => 0x401144 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+4>:	mov    %ecx,%eax

0x401146: => 0x401146 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+6>:	mov    %rdx,%rcx

0x401149: => 0x401149 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+9>:	mov    %rsi,%rdx

0x40114c: => 0x40114c <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+12>:	mov    %rdi,0x10(%rsp)

0x401151: => 0x401151 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+17>:	lea    0x10(%rsp),%rdi

0x401156: => 0x401156 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+22>:	lea    0x2b0b(%rip),%rsi        # 0x403c68

0x40115d: => 0x40115d <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+29>:	movzbl %al,%r8d

0x401161: => 0x401161 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+33>:	callq  *0x2e69(%rip)        # 0x403fd0

0x7ffff7f364e0: => 0x7ffff7f364e0 <std::rt::lang_start_internal>:	push   %rbp

0x7ffff7f364e1: => 0x7ffff7f364e1 <std::rt::lang_start_internal+1>:	push   %r15

0x7ffff7f364e3: => 0x7ffff7f364e3 <std::rt::lang_start_internal+3>:	push   %r14

0x7ffff7f364e5: => 0x7ffff7f364e5 <std::rt::lang_start_internal+5>:	push   %r13

0x7ffff7f364e7: => 0x7ffff7f364e7 <std::rt::lang_start_internal+7>:	push   %r12

0x7ffff7f364e9: => 0x7ffff7f364e9 <std::rt::lang_start_internal+9>:	push   %rbx

0x7ffff7f364ea: => 0x7ffff7f364ea <std::rt::lang_start_internal+10>:	sub    $0x118,%rsp

0x7ffff7f364f1: => 0x7ffff7f364f1 <std::rt::lang_start_internal+17>:	mov    %r8d,%ebp

0x7ffff7f364f4: => 0x7ffff7f364f4 <std::rt::lang_start_internal+20>:	mov    %rsi,%rbx

0x7ffff7f364f7: => 0x7ffff7f364f7 <std::rt::lang_start_internal+23>:	mov    %rdi,%r14

0x7ffff7f364fa: => 0x7ffff7f364fa <std::rt::lang_start_internal+26>:	movq   $0x0,0x70(%rsp)

0x7ffff7f36503: => 0x7ffff7f36503 <std::rt::lang_start_internal+35>:	movaps -0x5787a(%rip),%xmm0        # 0x7ffff7edec90

0x7ffff7f3650a: => 0x7ffff7f3650a <std::rt::lang_start_internal+42>:	movups %xmm0,0x78(%rsp)

0x7ffff7f3650f: => 0x7ffff7f3650f <std::rt::lang_start_internal+47>:	lea    0x70(%rsp),%r15

0x7ffff7f36514: => 0x7ffff7f36514 <std::rt::lang_start_internal+52>:	mov    0x8ee15(%rip),%r12        # 0x7ffff7fc5330

0x7ffff7f3651b: => 0x7ffff7f3651b <std::rt::lang_start_internal+59>:	mov    0x8ee16(%rip),%r13        # 0x7ffff7fc5338

0x7ffff7f36522: => 0x7ffff7f36522 <std::rt::lang_start_internal+66>:	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)

0x7ffff7f36530: => 0x7ffff7f36530 <std::rt::lang_start_internal+80>:	mov    $0x3,%esi

0x7ffff7f36535: => 0x7ffff7f36535 <std::rt::lang_start_internal+85>:	mov    %r15,%rdi

0x7ffff7f36538: => 0x7ffff7f36538 <std::rt::lang_start_internal+88>:	xor    %edx,%edx

0x7ffff7f3653a: => 0x7ffff7f3653a <std::rt::lang_start_internal+90>:	callq  *%r12

0x7ffff7f3653d: => 0x7ffff7f3653d <std::rt::lang_start_internal+93>:	cmp    $0xffffffff,%eax

0x7ffff7f36540: => 0x7ffff7f36540 <std::rt::lang_start_internal+96>:	jne    0x7ffff7f3660e <std::rt::lang_start_internal+302>

0x7ffff7f3660e: => 0x7ffff7f3660e <std::rt::lang_start_internal+302>:	testb  $0x20,0x76(%rsp)

0x7ffff7f36613: => 0x7ffff7f36613 <std::rt::lang_start_internal+307>:	je     0x7ffff7f36634 <std::rt::lang_start_internal+340>

0x7ffff7f36634: => 0x7ffff7f36634 <std::rt::lang_start_internal+340>:	testb  $0x20,0x7e(%rsp)

0x7ffff7f36639: => 0x7ffff7f36639 <std::rt::lang_start_internal+345>:	je     0x7ffff7f3665a <std::rt::lang_start_internal+378>

0x7ffff7f3665a: => 0x7ffff7f3665a <std::rt::lang_start_internal+378>:	testb  $0x20,0x86(%rsp)

0x7ffff7f36662: => 0x7ffff7f36662 <std::rt::lang_start_internal+386>:	je     0x7ffff7f36683 <std::rt::lang_start_internal+419>

0x7ffff7f36683: => 0x7ffff7f36683 <std::rt::lang_start_internal+419>:	cmp    $0x3,%bpl

0x7ffff7f36687: => 0x7ffff7f36687 <std::rt::lang_start_internal+423>:	ja     0x7ffff7f36ad3 <std::rt::lang_start_internal+1523>

0x7ffff7f3668d: => 0x7ffff7f3668d <std::rt::lang_start_internal+429>:	mov    $0x1,%esi

0x7ffff7f36692: => 0x7ffff7f36692 <std::rt::lang_start_internal+434>:	movzbl %bpl,%eax

0x7ffff7f36696: => 0x7ffff7f36696 <std::rt::lang_start_internal+438>:	lea    -0x57065(%rip),%rcx        # 0x7ffff7edf638

0x7ffff7f3669d: => 0x7ffff7f3669d <std::rt::lang_start_internal+445>:	movslq (%rcx,%rax,4),%rax

0x7ffff7f366a1: => 0x7ffff7f366a1 <std::rt::lang_start_internal+449>:	add    %rcx,%rax

0x7ffff7f366a4: => 0x7ffff7f366a4 <std::rt::lang_start_internal+452>:	jmpq   *%rax

0x7ffff7f366b8: => 0x7ffff7f366b8 <std::rt::lang_start_internal+472>:	mov    $0xd,%edi

0x7ffff7f366bd: => 0x7ffff7f366bd <std::rt::lang_start_internal+477>:	callq  *0x8ec8d(%rip)        # 0x7ffff7fc5350

0x7ffff7f366c3: => 0x7ffff7f366c3 <std::rt::lang_start_internal+483>:	cmp    $0xffffffffffffffff,%rax

0x7ffff7f366c7: => 0x7ffff7f366c7 <std::rt::lang_start_internal+487>:	je     0x7ffff7f36a1f <std::rt::lang_start_internal+1343>

0x7ffff7f366cd: => 0x7ffff7f366cd <std::rt::lang_start_internal+493>:	xorps  %xmm0,%xmm0

0x7ffff7f366d0: => 0x7ffff7f366d0 <std::rt::lang_start_internal+496>:	movaps %xmm0,0xf0(%rsp)

0x7ffff7f366d8: => 0x7ffff7f366d8 <std::rt::lang_start_internal+504>:	movaps %xmm0,0xe0(%rsp)

0x7ffff7f366e0: => 0x7ffff7f366e0 <std::rt::lang_start_internal+512>:	movaps %xmm0,0xd0(%rsp)

0x7ffff7f366e8: => 0x7ffff7f366e8 <std::rt::lang_start_internal+520>:	movaps %xmm0,0xc0(%rsp)

0x7ffff7f366f0: => 0x7ffff7f366f0 <std::rt::lang_start_internal+528>:	movaps %xmm0,0xb0(%rsp)

0x7ffff7f366f8: => 0x7ffff7f366f8 <std::rt::lang_start_internal+536>:	movaps %xmm0,0xa0(%rsp)

0x7ffff7f36700: => 0x7ffff7f36700 <std::rt::lang_start_internal+544>:	movaps %xmm0,0x90(%rsp)

0x7ffff7f36708: => 0x7ffff7f36708 <std::rt::lang_start_internal+552>:	movaps %xmm0,0x80(%rsp)

0x7ffff7f36710: => 0x7ffff7f36710 <std::rt::lang_start_internal+560>:	movaps %xmm0,0x70(%rsp)

0x7ffff7f36715: => 0x7ffff7f36715 <std::rt::lang_start_internal+565>:	movq   $0x0,0x100(%rsp)

0x7ffff7f36721: => 0x7ffff7f36721 <std::rt::lang_start_internal+577>:	lea    0x70(%rsp),%rdx

0x7ffff7f36726: => 0x7ffff7f36726 <std::rt::lang_start_internal+582>:	mov    $0xb,%edi

0x7ffff7f3672b: => 0x7ffff7f3672b <std::rt::lang_start_internal+587>:	xor    %esi,%esi

0x7ffff7f3672d: => 0x7ffff7f3672d <std::rt::lang_start_internal+589>:	callq  *0x8ec25(%rip)        # 0x7ffff7fc5358

0x7ffff7f36733: => 0x7ffff7f36733 <std::rt::lang_start_internal+595>:	cmpq   $0x0,0x70(%rsp)

0x7ffff7f36739: => 0x7ffff7f36739 <std::rt::lang_start_internal+601>:	jne    0x7ffff7f3676b <std::rt::lang_start_internal+651>

0x7ffff7f3673b: => 0x7ffff7f3673b <std::rt::lang_start_internal+603>:	movl   $0x8000004,0xf8(%rsp)

0x7ffff7f36746: => 0x7ffff7f36746 <std::rt::lang_start_internal+614>:	lea    0x284d3(%rip),%rax        # 0x7ffff7f5ec20 <std::sys::pal::unix::stack_overflow::imp::signal_handler>

0x7ffff7f3674d: => 0x7ffff7f3674d <std::rt::lang_start_internal+621>:	mov    %rax,0x70(%rsp)

0x7ffff7f36752: => 0x7ffff7f36752 <std::rt::lang_start_internal+626>:	lea    0x70(%rsp),%rsi

0x7ffff7f36757: => 0x7ffff7f36757 <std::rt::lang_start_internal+631>:	mov    $0xb,%edi

0x7ffff7f3675c: => 0x7ffff7f3675c <std::rt::lang_start_internal+636>:	xor    %edx,%edx

0x7ffff7f3675e: => 0x7ffff7f3675e <std::rt::lang_start_internal+638>:	callq  *0x8ebf4(%rip)        # 0x7ffff7fc5358

0x7ffff7f36764: => 0x7ffff7f36764 <std::rt::lang_start_internal+644>:	movb   $0x1,0x90285(%rip)        # 0x7ffff7fc69f0 <_ZN3std3sys3pal4unix14stack_overflow3imp13NEED_ALTSTACK17he859d1bf847dde3eE.0>

0x7ffff7f3676b: => 0x7ffff7f3676b <std::rt::lang_start_internal+651>:	lea    0x70(%rsp),%rdx

0x7ffff7f36770: => 0x7ffff7f36770 <std::rt::lang_start_internal+656>:	mov    $0x7,%edi

0x7ffff7f36775: => 0x7ffff7f36775 <std::rt::lang_start_internal+661>:	xor    %esi,%esi

0x7ffff7f36777: => 0x7ffff7f36777 <std::rt::lang_start_internal+663>:	callq  *0x8ebdb(%rip)        # 0x7ffff7fc5358

0x7ffff7f3677d: => 0x7ffff7f3677d <std::rt::lang_start_internal+669>:	cmpq   $0x0,0x70(%rsp)

0x7ffff7f36783: => 0x7ffff7f36783 <std::rt::lang_start_internal+675>:	jne    0x7ffff7f367b5 <std::rt::lang_start_internal+725>

0x7ffff7f36785: => 0x7ffff7f36785 <std::rt::lang_start_internal+677>:	movl   $0x8000004,0xf8(%rsp)

0x7ffff7f36790: => 0x7ffff7f36790 <std::rt::lang_start_internal+688>:	lea    0x28489(%rip),%rax        # 0x7ffff7f5ec20 <std::sys::pal::unix::stack_overflow::imp::signal_handler>

0x7ffff7f36797: => 0x7ffff7f36797 <std::rt::lang_start_internal+695>:	mov    %rax,0x70(%rsp)

0x7ffff7f3679c: => 0x7ffff7f3679c <std::rt::lang_start_internal+700>:	lea    0x70(%rsp),%rsi

0x7ffff7f367a1: => 0x7ffff7f367a1 <std::rt::lang_start_internal+705>:	mov    $0x7,%edi

0x7ffff7f367a6: => 0x7ffff7f367a6 <std::rt::lang_start_internal+710>:	xor    %edx,%edx

0x7ffff7f367a8: => 0x7ffff7f367a8 <std::rt::lang_start_internal+712>:	callq  *0x8ebaa(%rip)        # 0x7ffff7fc5358

0x7ffff7f367ae: => 0x7ffff7f367ae <std::rt::lang_start_internal+718>:	movb   $0x1,0x9023b(%rip)        # 0x7ffff7fc69f0 <_ZN3std3sys3pal4unix14stack_overflow3imp13NEED_ALTSTACK17he859d1bf847dde3eE.0>

0x7ffff7f367b5: => 0x7ffff7f367b5 <std::rt::lang_start_internal+725>:	callq  0x7ffff7f5eeb0 <std::sys::pal::unix::stack_overflow::imp::make_handler>

0x7ffff7f367ba: => 0x7ffff7f367ba <std::rt::lang_start_internal+730>:	mov    %rax,0x90227(%rip)        # 0x7ffff7fc69e8 <_ZN3std3sys3pal4unix14stack_overflow3imp13MAIN_ALTSTACK17hc84a29a28cecdde3E.0>

0x7ffff7f367c1: => 0x7ffff7f367c1 <std::rt::lang_start_internal+737>:	mov    $0x1e,%edi

0x7ffff7f367c6: => 0x7ffff7f367c6 <std::rt::lang_start_internal+742>:	callq  *0x8eb94(%rip)        # 0x7ffff7fc5360

0x7ffff7f367cc: => 0x7ffff7f367cc <std::rt::lang_start_internal+748>:	mov    %rax,0x90225(%rip)        # 0x7ffff7fc69f8 <_ZN3std3sys3pal4unix6thread5guard9PAGE_SIZE17hb93bfb89caf494ffE.0>

0x7ffff7f367d3: => 0x7ffff7f367d3 <std::rt::lang_start_internal+755>:	mov    0x9021e(%rip),%rbp        # 0x7ffff7fc69f8 <_ZN3std3sys3pal4unix6thread5guard9PAGE_SIZE17hb93bfb89caf494ffE.0>

0x7ffff7f367da: => 0x7ffff7f367da <std::rt::lang_start_internal+762>:	test   %rbp,%rbp

0x7ffff7f367dd: => 0x7ffff7f367dd <std::rt::lang_start_internal+765>:	je     0x7ffff7f3694e <std::rt::lang_start_internal+1134>

0x7ffff7f367e3: => 0x7ffff7f367e3 <std::rt::lang_start_internal+771>:	mov    %rax,%r15

0x7ffff7f367e6: => 0x7ffff7f367e6 <std::rt::lang_start_internal+774>:	xorps  %xmm0,%xmm0

0x7ffff7f367e9: => 0x7ffff7f367e9 <std::rt::lang_start_internal+777>:	movaps %xmm0,0x90(%rsp)

0x7ffff7f367f1: => 0x7ffff7f367f1 <std::rt::lang_start_internal+785>:	movaps %xmm0,0x80(%rsp)

0x7ffff7f367f9: => 0x7ffff7f367f9 <std::rt::lang_start_internal+793>:	movaps %xmm0,0x70(%rsp)

0x7ffff7f367fe: => 0x7ffff7f367fe <std::rt::lang_start_internal+798>:	movq   $0x0,0xa0(%rsp)

0x7ffff7f3680a: => 0x7ffff7f3680a <std::rt::lang_start_internal+810>:	callq  *0x8eb58(%rip)        # 0x7ffff7fc5368

0x7ffff7f36810: => 0x7ffff7f36810 <std::rt::lang_start_internal+816>:	lea    0x70(%rsp),%rsi

0x7ffff7f36815: => 0x7ffff7f36815 <std::rt::lang_start_internal+821>:	mov    %rax,%rdi

0x7ffff7f36818: => 0x7ffff7f36818 <std::rt::lang_start_internal+824>:	callq  *0x8eb52(%rip)        # 0x7ffff7fc5370

0x7ffff7f3681e: => 0x7ffff7f3681e <std::rt::lang_start_internal+830>:	test   %eax,%eax

0x7ffff7f36820: => 0x7ffff7f36820 <std::rt::lang_start_internal+832>:	je     0x7ffff7f36829 <std::rt::lang_start_internal+841>

0x7ffff7f36829: => 0x7ffff7f36829 <std::rt::lang_start_internal+841>:	movq   $0x0,0x8(%rsp)

0x7ffff7f36832: => 0x7ffff7f36832 <std::rt::lang_start_internal+850>:	movq   $0x0,0x48(%rsp)

0x7ffff7f3683b: => 0x7ffff7f3683b <std::rt::lang_start_internal+859>:	lea    0x70(%rsp),%rdi

0x7ffff7f36840: => 0x7ffff7f36840 <std::rt::lang_start_internal+864>:	lea    0x8(%rsp),%rsi

0x7ffff7f36845: => 0x7ffff7f36845 <std::rt::lang_start_internal+869>:	lea    0x48(%rsp),%r13

0x7ffff7f3684a: => 0x7ffff7f3684a <std::rt::lang_start_internal+874>:	mov    %r13,%rdx

0x7ffff7f3684d: => 0x7ffff7f3684d <std::rt::lang_start_internal+877>:	callq  *0x8eb25(%rip)        # 0x7ffff7fc5378

0x7ffff7f36853: => 0x7ffff7f36853 <std::rt::lang_start_internal+883>:	mov    %eax,0x60(%rsp)

0x7ffff7f36857: => 0x7ffff7f36857 <std::rt::lang_start_internal+887>:	test   %eax,%eax

0x7ffff7f36859: => 0x7ffff7f36859 <std::rt::lang_start_internal+889>:	jne    0x7ffff7f36a8f <std::rt::lang_start_internal+1455>

0x7ffff7f3685f: => 0x7ffff7f3685f <std::rt::lang_start_internal+895>:	mov    0x8(%rsp),%r12

0x7ffff7f36864: => 0x7ffff7f36864 <std::rt::lang_start_internal+900>:	lea    0x70(%rsp),%rdi

0x7ffff7f36869: => 0x7ffff7f36869 <std::rt::lang_start_internal+905>:	callq  *0x8eb11(%rip)        # 0x7ffff7fc5380

0x7ffff7f3686f: => 0x7ffff7f3686f <std::rt::lang_start_internal+911>:	mov    %eax,0x48(%rsp)

0x7ffff7f36873: => 0x7ffff7f36873 <std::rt::lang_start_internal+915>:	test   %eax,%eax

0x7ffff7f36875: => 0x7ffff7f36875 <std::rt::lang_start_internal+917>:	jne    0x7ffff7f36aab <std::rt::lang_start_internal+1483>

0x7ffff7f3687b: => 0x7ffff7f3687b <std::rt::lang_start_internal+923>:	mov    %r12,%rax

0x7ffff7f3687e: => 0x7ffff7f3687e <std::rt::lang_start_internal+926>:	or     %rbp,%rax

0x7ffff7f36881: => 0x7ffff7f36881 <std::rt::lang_start_internal+929>:	shr    $0x20,%rax

0x7ffff7f36885: => 0x7ffff7f36885 <std::rt::lang_start_internal+933>:	je     0x7ffff7f36891 <std::rt::lang_start_internal+945>

0x7ffff7f36887: => 0x7ffff7f36887 <std::rt::lang_start_internal+935>:	mov    %r12,%rax

0x7ffff7f3688a: => 0x7ffff7f3688a <std::rt::lang_start_internal+938>:	xor    %edx,%edx

0x7ffff7f3688c: => 0x7ffff7f3688c <std::rt::lang_start_internal+940>:	div    %rbp

0x7ffff7f3688f: => 0x7ffff7f3688f <std::rt::lang_start_internal+943>:	jmp    0x7ffff7f36898 <std::rt::lang_start_internal+952>

0x7ffff7f36898: => 0x7ffff7f36898 <std::rt::lang_start_internal+952>:	sub    %rdx,%rbp

0x7ffff7f3689b: => 0x7ffff7f3689b <std::rt::lang_start_internal+955>:	test   %rdx,%rdx

0x7ffff7f3689e: => 0x7ffff7f3689e <std::rt::lang_start_internal+958>:	cmove  %rdx,%rbp

0x7ffff7f368a2: => 0x7ffff7f368a2 <std::rt::lang_start_internal+962>:	add    %rbp,%r12

0x7ffff7f368a5: => 0x7ffff7f368a5 <std::rt::lang_start_internal+965>:	mov    %r12,%rax

0x7ffff7f368a8: => 0x7ffff7f368a8 <std::rt::lang_start_internal+968>:	sub    %r15,%rax

0x7ffff7f368ab: => 0x7ffff7f368ab <std::rt::lang_start_internal+971>:	mov    %rax,0x50(%rsp)

0x7ffff7f368b0: => 0x7ffff7f368b0 <std::rt::lang_start_internal+976>:	mov    %r12,0x58(%rsp)

0x7ffff7f368b5: => 0x7ffff7f368b5 <std::rt::lang_start_internal+981>:	mov    $0x1,%eax

0x7ffff7f368ba: => 0x7ffff7f368ba <std::rt::lang_start_internal+986>:	mov    %rax,0x48(%rsp)

0x7ffff7f368bf: => 0x7ffff7f368bf <std::rt::lang_start_internal+991>:	lea    -0x556aa(%rip),%rsi        # 0x7ffff7ee121c

0x7ffff7f368c6: => 0x7ffff7f368c6 <std::rt::lang_start_internal+998>:	lea    0x18(%rsp),%r15

0x7ffff7f368cb: => 0x7ffff7f368cb <std::rt::lang_start_internal+1003>:	mov    $0x4,%edx

0x7ffff7f368d0: => 0x7ffff7f368d0 <std::rt::lang_start_internal+1008>:	mov    %r15,%rdi

0x7ffff7f368d3: => 0x7ffff7f368d3 <std::rt::lang_start_internal+1011>:	callq  *0x8e907(%rip)        # 0x7ffff7fc51e0

0x7ffff7f368d9: => 0x7ffff7f368d9 <std::rt::lang_start_internal+1017>:	movabs $0x8000000000000000,%r12

0x7ffff7f368e3: => 0x7ffff7f368e3 <std::rt::lang_start_internal+1027>:	mov    0x18(%rsp),%r13

0x7ffff7f368e8: => 0x7ffff7f368e8 <std::rt::lang_start_internal+1032>:	cmp    %r12,%r13

0x7ffff7f368eb: => 0x7ffff7f368eb <std::rt::lang_start_internal+1035>:	jne    0x7ffff7f36966 <std::rt::lang_start_internal+1158>

0x7ffff7f368ed: => 0x7ffff7f368ed <std::rt::lang_start_internal+1037>:	mov    0x20(%rsp),%rdi

0x7ffff7f368f2: => 0x7ffff7f368f2 <std::rt::lang_start_internal+1042>:	mov    0x28(%rsp),%rsi

0x7ffff7f368f7: => 0x7ffff7f368f7 <std::rt::lang_start_internal+1047>:	callq  *0x8e193(%rip)        # 0x7ffff7fc4a90

0x7ffff7f368fd: => 0x7ffff7f368fd <std::rt::lang_start_internal+1053>:	lea    0x48(%rsp),%rdi

0x7ffff7f36902: => 0x7ffff7f36902 <std::rt::lang_start_internal+1058>:	mov    %rax,%rsi

0x7ffff7f36905: => 0x7ffff7f36905 <std::rt::lang_start_internal+1061>:	callq  *0x8e065(%rip)        # 0x7ffff7fc4970

0x7ffff7f3690b: => 0x7ffff7f3690b <std::rt::lang_start_internal+1067>:	mov    %r14,%rdi

0x7ffff7f3690e: => 0x7ffff7f3690e <std::rt::lang_start_internal+1070>:	callq  *0x28(%rbx)

0x7ffff7f36911: => 0x7ffff7f36911 <std::rt::lang_start_internal+1073>:	movslq %eax,%r14

0x7ffff7f36914: => 0x7ffff7f36914 <std::rt::lang_start_internal+1076>:	mov    0x8ffba(%rip),%eax        # 0x7ffff7fc68d4 <_ZN3std2rt7cleanup7CLEANUP17h2220258659f3f514E>

0x7ffff7f3691a: => 0x7ffff7f3691a <std::rt::lang_start_internal+1082>:	cmp    $0x4,%eax

0x7ffff7f3691d: => 0x7ffff7f3691d <std::rt::lang_start_internal+1085>:	je     0x7ffff7f36933 <std::rt::lang_start_internal+1107>

0x7ffff7f3691f: => 0x7ffff7f3691f <std::rt::lang_start_internal+1087>:	movb   $0x1,0x18(%rsp)

0x7ffff7f36924: => 0x7ffff7f36924 <std::rt::lang_start_internal+1092>:	mov    %r15,0x70(%rsp)

0x7ffff7f36929: => 0x7ffff7f36929 <std::rt::lang_start_internal+1097>:	lea    0x70(%rsp),%rdi

0x7ffff7f3692e: => 0x7ffff7f3692e <std::rt::lang_start_internal+1102>:	callq  0x7ffff7f63fd0 <std::sys_common::once::futex::Once::call>

0x7ffff7f36933: => 0x7ffff7f36933 <std::rt::lang_start_internal+1107>:	mov    %r14,%rax

0x7ffff7f36936: => 0x7ffff7f36936 <std::rt::lang_start_internal+1110>:	add    $0x118,%rsp

0x7ffff7f3693d: => 0x7ffff7f3693d <std::rt::lang_start_internal+1117>:	pop    %rbx

0x7ffff7f3693e: => 0x7ffff7f3693e <std::rt::lang_start_internal+1118>:	pop    %r12

0x7ffff7f36940: => 0x7ffff7f36940 <std::rt::lang_start_internal+1120>:	pop    %r13

0x7ffff7f36942: => 0x7ffff7f36942 <std::rt::lang_start_internal+1122>:	pop    %r14

0x7ffff7f36944: => 0x7ffff7f36944 <std::rt::lang_start_internal+1124>:	pop    %r15

0x7ffff7f36946: => 0x7ffff7f36946 <std::rt::lang_start_internal+1126>:	pop    %rbp

0x7ffff7f36947: => 0x7ffff7f36947 <std::rt::lang_start_internal+1127>:	retq   

0x401167: => 0x401167 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+39>:	mov    %rax,0x8(%rsp)

0x40116c: => 0x40116c <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+44>:	mov    0x8(%rsp),%rax

0x401171: => 0x401171 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+49>:	add    $0x18,%rsp

0x401175: => 0x401175 <_ZN3std2rt10lang_start17h9389d0e0f886fdc4E+53>:	retq   

0x401b45: => 0x401b45 <main+21>:	pop    %rcx

0x401b46: => 0x401b46 <main+22>:	retq   

0x7ffff7cad083: => 0x7ffff7cad083 <__libc_start_main+243>:	mov    %eax,%edi

0x7ffff7cad085: => 0x7ffff7cad085 <__libc_start_main+245>:	callq  0x7ffff7ccfa40 <__GI_exit>

0x7ffff7ccfa40: => 0x7ffff7ccfa40 <__GI_exit>:	endbr64 

0x7ffff7ccfa44: => 0x7ffff7ccfa44 <__GI_exit+4>:	push   %rax

0x7ffff7ccfa45: => 0x7ffff7ccfa45 <__GI_exit+5>:	pop    %rax

0x7ffff7ccfa46: => 0x7ffff7ccfa46 <__GI_exit+6>:	mov    $0x1,%ecx

0x7ffff7ccfa4b: => 0x7ffff7ccfa4b <__GI_exit+11>:	mov    $0x1,%edx

0x7ffff7ccfa50: => 0x7ffff7ccfa50 <__GI_exit+16>:	lea    0x1a5cc1(%rip),%rsi        # 0x7ffff7e75718 <__exit_funcs>

0x7ffff7ccfa57: => 0x7ffff7ccfa57 <__GI_exit+23>:	sub    $0x8,%rsp

0x7ffff7ccfa5b: => 0x7ffff7ccfa5b <__GI_exit+27>:	callq  0x7ffff7ccf7b0 <__run_exit_handlers>

0x7ffff7ccf7b0: => 0x7ffff7ccf7b0 <__run_exit_handlers>:	endbr64 

0x7ffff7ccf7b4: => 0x7ffff7ccf7b4 <__run_exit_handlers+4>:	push   %r15

0x7ffff7ccf7b6: => 0x7ffff7ccf7b6 <__run_exit_handlers+6>:	push   %r14

0x7ffff7ccf7b8: => 0x7ffff7ccf7b8 <__run_exit_handlers+8>:	push   %r13

0x7ffff7ccf7ba: => 0x7ffff7ccf7ba <__run_exit_handlers+10>:	push   %r12

0x7ffff7ccf7bc: => 0x7ffff7ccf7bc <__run_exit_handlers+12>:	push   %rbp

0x7ffff7ccf7bd: => 0x7ffff7ccf7bd <__run_exit_handlers+13>:	mov    %edi,%ebp

0x7ffff7ccf7bf: => 0x7ffff7ccf7bf <__run_exit_handlers+15>:	push   %rbx

0x7ffff7ccf7c0: => 0x7ffff7ccf7c0 <__run_exit_handlers+16>:	mov    %rsi,%rbx

0x7ffff7ccf7c3: => 0x7ffff7ccf7c3 <__run_exit_handlers+19>:	sub    $0x18,%rsp

0x7ffff7ccf7c7: => 0x7ffff7ccf7c7 <__run_exit_handlers+23>:	mov    %edx,0xc(%rsp)

0x7ffff7ccf7cb: => 0x7ffff7ccf7cb <__run_exit_handlers+27>:	test   %cl,%cl

0x7ffff7ccf7cd: => 0x7ffff7ccf7cd <__run_exit_handlers+29>:	jne    0x7ffff7ccfa08 <__run_exit_handlers+600>

0x7ffff7ccfa08: => 0x7ffff7ccfa08 <__run_exit_handlers+600>:	callq  0x7ffff7cd0280 <__GI___call_tls_dtors>

0x7ffff7cd0280: => 0x7ffff7cd0280 <__GI___call_tls_dtors>:	endbr64 

0x7ffff7cd0284: => 0x7ffff7cd0284 <__GI___call_tls_dtors+4>:	push   %rbp

0x7ffff7cd0285: => 0x7ffff7cd0285 <__GI___call_tls_dtors+5>:	push   %rbx

0x7ffff7cd0286: => 0x7ffff7cd0286 <__GI___call_tls_dtors+6>:	sub    $0x8,%rsp

0x7ffff7cd028a: => 0x7ffff7cd028a <__GI___call_tls_dtors+10>:	mov    0x1a4acf(%rip),%rbx        # 0x7ffff7e74d60

0x7ffff7cd0291: => 0x7ffff7cd0291 <__GI___call_tls_dtors+17>:	mov    %fs:(%rbx),%rbp

0x7ffff7cd0295: => 0x7ffff7cd0295 <__GI___call_tls_dtors+21>:	test   %rbp,%rbp

0x7ffff7cd0298: => 0x7ffff7cd0298 <__GI___call_tls_dtors+24>:	je     0x7ffff7cd02dd <__GI___call_tls_dtors+93>

0x7ffff7cd029a: => 0x7ffff7cd029a <__GI___call_tls_dtors+26>:	nopw   0x0(%rax,%rax,1)

0x7ffff7cd02a0: => 0x7ffff7cd02a0 <__GI___call_tls_dtors+32>:	mov    0x18(%rbp),%rdx

0x7ffff7cd02a4: => 0x7ffff7cd02a4 <__GI___call_tls_dtors+36>:	mov    0x0(%rbp),%rax

0x7ffff7cd02a8: => 0x7ffff7cd02a8 <__GI___call_tls_dtors+40>:	ror    $0x11,%rax

0x7ffff7cd02ac: => 0x7ffff7cd02ac <__GI___call_tls_dtors+44>:	xor    %fs:0x30,%rax

0x7ffff7cd02b5: => 0x7ffff7cd02b5 <__GI___call_tls_dtors+53>:	mov    %rdx,%fs:(%rbx)

0x7ffff7cd02b9: => 0x7ffff7cd02b9 <__GI___call_tls_dtors+57>:	mov    0x8(%rbp),%rdi

0x7ffff7cd02bd: => 0x7ffff7cd02bd <__GI___call_tls_dtors+61>:	callq  *%rax

0x7ffff7cd02bf: => 0x7ffff7cd02bf <__GI___call_tls_dtors+63>:	mov    0x10(%rbp),%rax

0x7ffff7cd02c3: => 0x7ffff7cd02c3 <__GI___call_tls_dtors+67>:	lock subq $0x1,0x460(%rax)

0x7ffff7cd02cc: => 0x7ffff7cd02cc <__GI___call_tls_dtors+76>:	mov    %rbp,%rdi

0x7ffff7cd02cf: => 0x7ffff7cd02cf <__GI___call_tls_dtors+79>:	callq  0x7ffff7cab330 <free@plt>

0x7ffff7cd02d4: => 0x7ffff7cd02d4 <__GI___call_tls_dtors+84>:	mov    %fs:(%rbx),%rbp

0x7ffff7cd02d8: => 0x7ffff7cd02d8 <__GI___call_tls_dtors+88>:	test   %rbp,%rbp

0x7ffff7cd02db: => 0x7ffff7cd02db <__GI___call_tls_dtors+91>:	jne    0x7ffff7cd02a0 <__GI___call_tls_dtors+32>

0x7ffff7cd02dd: => 0x7ffff7cd02dd <__GI___call_tls_dtors+93>:	add    $0x8,%rsp

0x7ffff7cd02e1: => 0x7ffff7cd02e1 <__GI___call_tls_dtors+97>:	pop    %rbx

0x7ffff7cd02e2: => 0x7ffff7cd02e2 <__GI___call_tls_dtors+98>:	pop    %rbp

0x7ffff7cd02e3: => 0x7ffff7cd02e3 <__GI___call_tls_dtors+99>:	retq   

0x7ffff7ccfa0d: => 0x7ffff7ccfa0d <__run_exit_handlers+605>:	jmpq   0x7ffff7ccf7d3 <__run_exit_handlers+35>

0x7ffff7ccf7d3: => 0x7ffff7ccf7d3 <__run_exit_handlers+35>:	lea    0x1aab0e(%rip),%r14        # 0x7ffff7e7a2e8 <__exit_funcs_lock>

0x7ffff7ccf7da: => 0x7ffff7ccf7da <__run_exit_handlers+42>:	xor    %r12d,%r12d

0x7ffff7ccf7dd: => 0x7ffff7ccf7dd <__run_exit_handlers+45>:	nopl   (%rax)

0x7ffff7ccf7e0: => 0x7ffff7ccf7e0 <__run_exit_handlers+48>:	mov    %fs:0x18,%eax

0x7ffff7ccf7e8: => 0x7ffff7ccf7e8 <__run_exit_handlers+56>:	mov    $0x1,%edx

0x7ffff7ccf7ed: => 0x7ffff7ccf7ed <__run_exit_handlers+61>:	test   %eax,%eax

0x7ffff7ccf7ef: => 0x7ffff7ccf7ef <__run_exit_handlers+63>:	jne    0x7ffff7ccf9c2 <__run_exit_handlers+530>

0x7ffff7ccf7f5: => 0x7ffff7ccf7f5 <__run_exit_handlers+69>:	cmpxchg %edx,(%r14)

0x7ffff7ccf7f9: => 0x7ffff7ccf7f9 <__run_exit_handlers+73>:	mov    (%rbx),%r15

0x7ffff7ccf7fc: => 0x7ffff7ccf7fc <__run_exit_handlers+76>:	test   %r15,%r15

0x7ffff7ccf7ff: => 0x7ffff7ccf7ff <__run_exit_handlers+79>:	jne    0x7ffff7ccf83c <__run_exit_handlers+140>

0x7ffff7ccf83c: => 0x7ffff7ccf83c <__run_exit_handlers+140>:	mov    0x8(%r15),%rax

0x7ffff7ccf840: => 0x7ffff7ccf840 <__run_exit_handlers+144>:	test   %rax,%rax

0x7ffff7ccf843: => 0x7ffff7ccf843 <__run_exit_handlers+147>:	je     0x7ffff7ccf940 <__run_exit_handlers+400>

0x7ffff7ccf849: => 0x7ffff7ccf849 <__run_exit_handlers+153>:	lea    -0x1(%rax),%r9

0x7ffff7ccf84d: => 0x7ffff7ccf84d <__run_exit_handlers+157>:	mov    0x1aaa8c(%rip),%r13        # 0x7ffff7e7a2e0 <__new_exitfn_called>

0x7ffff7ccf854: => 0x7ffff7ccf854 <__run_exit_handlers+164>:	mov    %r9,0x8(%r15)

0x7ffff7ccf858: => 0x7ffff7ccf858 <__run_exit_handlers+168>:	mov    %fs:0x18,%eax

0x7ffff7ccf860: => 0x7ffff7ccf860 <__run_exit_handlers+176>:	test   %eax,%eax

0x7ffff7ccf862: => 0x7ffff7ccf862 <__run_exit_handlers+178>:	jne    0x7ffff7ccf910 <__run_exit_handlers+352>

0x7ffff7ccf868: => 0x7ffff7ccf868 <__run_exit_handlers+184>:	subl   $0x1,(%r14)

0x7ffff7ccf86c: => 0x7ffff7ccf86c <__run_exit_handlers+188>:	mov    %r9,%rax

0x7ffff7ccf86f: => 0x7ffff7ccf86f <__run_exit_handlers+191>:	shl    $0x5,%rax

0x7ffff7ccf873: => 0x7ffff7ccf873 <__run_exit_handlers+195>:	add    %r15,%rax

0x7ffff7ccf876: => 0x7ffff7ccf876 <__run_exit_handlers+198>:	mov    0x10(%rax),%rdx

0x7ffff7ccf87a: => 0x7ffff7ccf87a <__run_exit_handlers+202>:	cmp    $0x3,%rdx

0x7ffff7ccf87e: => 0x7ffff7ccf87e <__run_exit_handlers+206>:	je     0x7ffff7ccf8b0 <__run_exit_handlers+256>

0x7ffff7ccf880: => 0x7ffff7ccf880 <__run_exit_handlers+208>:	cmp    $0x4,%rdx

0x7ffff7ccf884: => 0x7ffff7ccf884 <__run_exit_handlers+212>:	jne    0x7ffff7ccf810 <__run_exit_handlers+96>

0x7ffff7ccf886: => 0x7ffff7ccf886 <__run_exit_handlers+214>:	mov    0x18(%rax),%rdx

0x7ffff7ccf88a: => 0x7ffff7ccf88a <__run_exit_handlers+218>:	mov    0x20(%rax),%rdi

0x7ffff7ccf88e: => 0x7ffff7ccf88e <__run_exit_handlers+222>:	movq   $0x0,0x10(%rax)

0x7ffff7ccf896: => 0x7ffff7ccf896 <__run_exit_handlers+230>:	mov    %ebp,%esi

0x7ffff7ccf898: => 0x7ffff7ccf898 <__run_exit_handlers+232>:	ror    $0x11,%rdx

0x7ffff7ccf89c: => 0x7ffff7ccf89c <__run_exit_handlers+236>:	xor    %fs:0x30,%rdx

0x7ffff7ccf8a5: => 0x7ffff7ccf8a5 <__run_exit_handlers+245>:	callq  *%rdx

0x7ffff7ccf8a7: => 0x7ffff7ccf8a7 <__run_exit_handlers+247>:	jmpq   0x7ffff7ccf81a <__run_exit_handlers+106>

0x7ffff7ccf81a: => 0x7ffff7ccf81a <__run_exit_handlers+106>:	mov    %fs:0x18,%eax

0x7ffff7ccf822: => 0x7ffff7ccf822 <__run_exit_handlers+114>:	mov    $0x1,%edx

0x7ffff7ccf827: => 0x7ffff7ccf827 <__run_exit_handlers+119>:	test   %eax,%eax

0x7ffff7ccf829: => 0x7ffff7ccf829 <__run_exit_handlers+121>:	jne    0x7ffff7ccf8f0 <__run_exit_handlers+320>

0x7ffff7ccf82f: => 0x7ffff7ccf82f <__run_exit_handlers+127>:	cmpxchg %edx,(%r14)

0x7ffff7ccf833: => 0x7ffff7ccf833 <__run_exit_handlers+131>:	cmp    %r13,0x1aaaa6(%rip)        # 0x7ffff7e7a2e0 <__new_exitfn_called>

0x7ffff7ccf83a: => 0x7ffff7ccf83a <__run_exit_handlers+138>:	jne    0x7ffff7ccf7f9 <__run_exit_handlers+73>

0x7ffff7ccf83c: => 0x7ffff7ccf83c <__run_exit_handlers+140>:	mov    0x8(%r15),%rax

0x7ffff7ccf840: => 0x7ffff7ccf840 <__run_exit_handlers+144>:	test   %rax,%rax

0x7ffff7ccf843: => 0x7ffff7ccf843 <__run_exit_handlers+147>:	je     0x7ffff7ccf940 <__run_exit_handlers+400>

0x7ffff7ccf940: => 0x7ffff7ccf940 <__run_exit_handlers+400>:	mov    (%r15),%rax

0x7ffff7ccf943: => 0x7ffff7ccf943 <__run_exit_handlers+403>:	mov    %rax,(%rbx)

0x7ffff7ccf946: => 0x7ffff7ccf946 <__run_exit_handlers+406>:	test   %rax,%rax

0x7ffff7ccf949: => 0x7ffff7ccf949 <__run_exit_handlers+409>:	je     0x7ffff7ccf953 <__run_exit_handlers+419>

0x7ffff7ccf953: => 0x7ffff7ccf953 <__run_exit_handlers+419>:	mov    %fs:0x18,%eax

0x7ffff7ccf95b: => 0x7ffff7ccf95b <__run_exit_handlers+427>:	test   %eax,%eax

0x7ffff7ccf95d: => 0x7ffff7ccf95d <__run_exit_handlers+429>:	jne    0x7ffff7ccf9dd <__run_exit_handlers+557>

0x7ffff7ccf95f: => 0x7ffff7ccf95f <__run_exit_handlers+431>:	subl   $0x1,(%r14)

0x7ffff7ccf963: => 0x7ffff7ccf963 <__run_exit_handlers+435>:	jmpq   0x7ffff7ccf7e0 <__run_exit_handlers+48>

0x7ffff7ccf7e0: => 0x7ffff7ccf7e0 <__run_exit_handlers+48>:	mov    %fs:0x18,%eax

0x7ffff7ccf7e8: => 0x7ffff7ccf7e8 <__run_exit_handlers+56>:	mov    $0x1,%edx

0x7ffff7ccf7ed: => 0x7ffff7ccf7ed <__run_exit_handlers+61>:	test   %eax,%eax

0x7ffff7ccf7ef: => 0x7ffff7ccf7ef <__run_exit_handlers+63>:	jne    0x7ffff7ccf9c2 <__run_exit_handlers+530>

0x7ffff7ccf7f5: => 0x7ffff7ccf7f5 <__run_exit_handlers+69>:	cmpxchg %edx,(%r14)

0x7ffff7ccf7f9: => 0x7ffff7ccf7f9 <__run_exit_handlers+73>:	mov    (%rbx),%r15

0x7ffff7ccf7fc: => 0x7ffff7ccf7fc <__run_exit_handlers+76>:	test   %r15,%r15

0x7ffff7ccf7ff: => 0x7ffff7ccf7ff <__run_exit_handlers+79>:	jne    0x7ffff7ccf83c <__run_exit_handlers+140>

0x7ffff7ccf801: => 0x7ffff7ccf801 <__run_exit_handlers+81>:	jmpq   0x7ffff7ccf968 <__run_exit_handlers+440>

0x7ffff7ccf968: => 0x7ffff7ccf968 <__run_exit_handlers+440>:	movb   $0x1,0x1a731d(%rip)        # 0x7ffff7e76c8c <__exit_funcs_done>

0x7ffff7ccf96f: => 0x7ffff7ccf96f <__run_exit_handlers+447>:	mov    %fs:0x18,%eax

0x7ffff7ccf977: => 0x7ffff7ccf977 <__run_exit_handlers+455>:	test   %eax,%eax

0x7ffff7ccf979: => 0x7ffff7ccf979 <__run_exit_handlers+457>:	jne    0x7ffff7ccfa12 <__run_exit_handlers+610>

0x7ffff7ccf97f: => 0x7ffff7ccf97f <__run_exit_handlers+463>:	subl   $0x1,(%r14)

0x7ffff7ccf983: => 0x7ffff7ccf983 <__run_exit_handlers+467>:	cmpb   $0x0,0xc(%rsp)

0x7ffff7ccf988: => 0x7ffff7ccf988 <__run_exit_handlers+472>:	je     0x7ffff7ccf9bb <__run_exit_handlers+523>

0x7ffff7ccf98a: => 0x7ffff7ccf98a <__run_exit_handlers+474>:	lea    0x1a1f07(%rip),%rbx        # 0x7ffff7e71898 <__elf_set___libc_atexit_element__IO_cleanup__>

0x7ffff7ccf991: => 0x7ffff7ccf991 <__run_exit_handlers+481>:	lea    0x1a1f08(%rip),%rax        # 0x7ffff7e718a0 <_IO_helper_jumps>

0x7ffff7ccf998: => 0x7ffff7ccf998 <__run_exit_handlers+488>:	cmp    %rax,%rbx

0x7ffff7ccf99b: => 0x7ffff7ccf99b <__run_exit_handlers+491>:	jae    0x7ffff7ccf9bb <__run_exit_handlers+523>

0x7ffff7ccf99d: => 0x7ffff7ccf99d <__run_exit_handlers+493>:	sub    $0x1,%rax

0x7ffff7ccf9a1: => 0x7ffff7ccf9a1 <__run_exit_handlers+497>:	sub    %rbx,%rax

0x7ffff7ccf9a4: => 0x7ffff7ccf9a4 <__run_exit_handlers+500>:	shr    $0x3,%rax

0x7ffff7ccf9a8: => 0x7ffff7ccf9a8 <__run_exit_handlers+504>:	lea    0x8(%rbx,%rax,8),%r12

0x7ffff7ccf9ad: => 0x7ffff7ccf9ad <__run_exit_handlers+509>:	nopl   (%rax)

0x7ffff7ccf9b0: => 0x7ffff7ccf9b0 <__run_exit_handlers+512>:	callq  *(%rbx)

0x7ffff7ccf9b2: => 0x7ffff7ccf9b2 <__run_exit_handlers+514>:	add    $0x8,%rbx

0x7ffff7ccf9b6: => 0x7ffff7ccf9b6 <__run_exit_handlers+518>:	cmp    %rbx,%r12

0x7ffff7ccf9b9: => 0x7ffff7ccf9b9 <__run_exit_handlers+521>:	jne    0x7ffff7ccf9b0 <__run_exit_handlers+512>

0x7ffff7ccf9bb: => 0x7ffff7ccf9bb <__run_exit_handlers+523>:	mov    %ebp,%edi

0x7ffff7ccf9bd: => 0x7ffff7ccf9bd <__run_exit_handlers+525>:	callq  0x7ffff7d6c110 <__GI__exit>

