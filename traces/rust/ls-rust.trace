0x4067f0: => 0x4067f0 <main>:	push   %rax

0x4067f1: => 0x4067f1 <main+1>:	mov    %rsi,%rdx

0x4067f4: => 0x4067f4 <main+4>:	movslq %edi,%rsi

0x4067f7: => 0x4067f7 <main+7>:	lea    -0x45e(%rip),%rdi        # 0x4063a0 <_ZN2ls4main17h4402054c32fbd4e8E>

0x4067fe: => 0x4067fe <main+14>:	xor    %ecx,%ecx

0x406800: => 0x406800 <main+16>:	callq  0x402ac0 <_ZN3std2rt10lang_start17h03bf1326ed387a58E>

0x402ac0: => 0x402ac0 <_ZN3std2rt10lang_start17h03bf1326ed387a58E>:	sub    $0x18,%rsp

0x402ac4: => 0x402ac4 <_ZN3std2rt10lang_start17h03bf1326ed387a58E+4>:	mov    %ecx,%eax

0x402ac6: => 0x402ac6 <_ZN3std2rt10lang_start17h03bf1326ed387a58E+6>:	mov    %rdx,%rcx

0x402ac9: => 0x402ac9 <_ZN3std2rt10lang_start17h03bf1326ed387a58E+9>:	mov    %rsi,%rdx

0x402acc: => 0x402acc <_ZN3std2rt10lang_start17h03bf1326ed387a58E+12>:	mov    %rdi,0x10(%rsp)

0x402ad1: => 0x402ad1 <_ZN3std2rt10lang_start17h03bf1326ed387a58E+17>:	lea    0x10(%rsp),%rdi

0x402ad6: => 0x402ad6 <_ZN3std2rt10lang_start17h03bf1326ed387a58E+22>:	lea    0x6ffb(%rip),%rsi        # 0x409ad8

0x402add: => 0x402add <_ZN3std2rt10lang_start17h03bf1326ed387a58E+29>:	movzbl %al,%r8d

0x402ae1: => 0x402ae1 <_ZN3std2rt10lang_start17h03bf1326ed387a58E+33>:	callq  *0x7491(%rip)        # 0x409f78

0x7ffff7f364e0: => 0x7ffff7f364e0 <std::rt::lang_start_internal>:	push   %rbp

0x7ffff7f364e1: => 0x7ffff7f364e1 <std::rt::lang_start_internal+1>:	push   %r15

0x7ffff7f364e3: => 0x7ffff7f364e3 <std::rt::lang_start_internal+3>:	push   %r14

0x7ffff7f364e5: => 0x7ffff7f364e5 <std::rt::lang_start_internal+5>:	push   %r13

0x7ffff7f364e7: => 0x7ffff7f364e7 <std::rt::lang_start_internal+7>:	push   %r12

0x7ffff7f364e9: => 0x7ffff7f364e9 <std::rt::lang_start_internal+9>:	push   %rbx

0x7ffff7f364ea: => 0x7ffff7f364ea <std::rt::lang_start_internal+10>:	sub    $0x118,%rsp

0x7ffff7f364f1: => 0x7ffff7f364f1 <std::rt::lang_start_internal+17>:	mov    %r8d,%ebp

0x7ffff7f364f4: => 0x7ffff7f364f4 <std::rt::lang_start_internal+20>:	mov    %rsi,%rbx

0x7ffff7f364f7: => 0x7ffff7f364f7 <std::rt::lang_start_internal+23>:	mov    %rdi,%r14

0x7ffff7f364fa: => 0x7ffff7f364fa <std::rt::lang_start_internal+26>:	movq   $0x0,0x70(%rsp)

0x7ffff7f36503: => 0x7ffff7f36503 <std::rt::lang_start_internal+35>:	movaps -0x5787a(%rip),%xmm0        # 0x7ffff7edec90

0x7ffff7f3650a: => 0x7ffff7f3650a <std::rt::lang_start_internal+42>:	movups %xmm0,0x78(%rsp)

0x7ffff7f3650f: => 0x7ffff7f3650f <std::rt::lang_start_internal+47>:	lea    0x70(%rsp),%r15

0x7ffff7f36514: => 0x7ffff7f36514 <std::rt::lang_start_internal+52>:	mov    0x8ee15(%rip),%r12        # 0x7ffff7fc5330

0x7ffff7f3651b: => 0x7ffff7f3651b <std::rt::lang_start_internal+59>:	mov    0x8ee16(%rip),%r13        # 0x7ffff7fc5338

0x7ffff7f36522: => 0x7ffff7f36522 <std::rt::lang_start_internal+66>:	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)

0x7ffff7f36530: => 0x7ffff7f36530 <std::rt::lang_start_internal+80>:	mov    $0x3,%esi

0x7ffff7f36535: => 0x7ffff7f36535 <std::rt::lang_start_internal+85>:	mov    %r15,%rdi

0x7ffff7f36538: => 0x7ffff7f36538 <std::rt::lang_start_internal+88>:	xor    %edx,%edx

0x7ffff7f3653a: => 0x7ffff7f3653a <std::rt::lang_start_internal+90>:	callq  *%r12

0x7ffff7d9bb70: => 0x7ffff7d9bb70 <__GI___poll>:	endbr64 

0x7ffff7d9bb74: => 0x7ffff7d9bb74 <__GI___poll+4>:	mov    %fs:0x18,%eax

0x7ffff7d9bb7c: => 0x7ffff7d9bb7c <__GI___poll+12>:	test   %eax,%eax

0x7ffff7d9bb7e: => 0x7ffff7d9bb7e <__GI___poll+14>:	jne    0x7ffff7d9bb90 <__GI___poll+32>

0x7ffff7d9bb80: => 0x7ffff7d9bb80 <__GI___poll+16>:	mov    $0x7,%eax

0x7ffff7d9bb85: => 0x7ffff7d9bb85 <__GI___poll+21>:	syscall 

0x7ffff7d9bb87: => 0x7ffff7d9bb87 <__GI___poll+23>:	cmp    $0xfffffffffffff000,%rax

0x7ffff7d9bb8d: => 0x7ffff7d9bb8d <__GI___poll+29>:	ja     0x7ffff7d9bbe0 <__GI___poll+112>

0x7ffff7d9bb8f: => 0x7ffff7d9bb8f <__GI___poll+31>:	retq   

0x7ffff7f3653d: => 0x7ffff7f3653d <std::rt::lang_start_internal+93>:	cmp    $0xffffffff,%eax

0x7ffff7f36540: => 0x7ffff7f36540 <std::rt::lang_start_internal+96>:	jne    0x7ffff7f3660e <std::rt::lang_start_internal+302>

0x7ffff7f3660e: => 0x7ffff7f3660e <std::rt::lang_start_internal+302>:	testb  $0x20,0x76(%rsp)

0x7ffff7f36613: => 0x7ffff7f36613 <std::rt::lang_start_internal+307>:	je     0x7ffff7f36634 <std::rt::lang_start_internal+340>

0x7ffff7f36634: => 0x7ffff7f36634 <std::rt::lang_start_internal+340>:	testb  $0x20,0x7e(%rsp)

0x7ffff7f36639: => 0x7ffff7f36639 <std::rt::lang_start_internal+345>:	je     0x7ffff7f3665a <std::rt::lang_start_internal+378>

0x7ffff7f3665a: => 0x7ffff7f3665a <std::rt::lang_start_internal+378>:	testb  $0x20,0x86(%rsp)

0x7ffff7f36662: => 0x7ffff7f36662 <std::rt::lang_start_internal+386>:	je     0x7ffff7f36683 <std::rt::lang_start_internal+419>

0x7ffff7f36683: => 0x7ffff7f36683 <std::rt::lang_start_internal+419>:	cmp    $0x3,%bpl

0x7ffff7f36687: => 0x7ffff7f36687 <std::rt::lang_start_internal+423>:	ja     0x7ffff7f36ad3 <std::rt::lang_start_internal+1523>

0x7ffff7f3668d: => 0x7ffff7f3668d <std::rt::lang_start_internal+429>:	mov    $0x1,%esi

0x7ffff7f36692: => 0x7ffff7f36692 <std::rt::lang_start_internal+434>:	movzbl %bpl,%eax

0x7ffff7f36696: => 0x7ffff7f36696 <std::rt::lang_start_internal+438>:	lea    -0x57065(%rip),%rcx        # 0x7ffff7edf638

0x7ffff7f3669d: => 0x7ffff7f3669d <std::rt::lang_start_internal+445>:	movslq (%rcx,%rax,4),%rax

0x7ffff7f366a1: => 0x7ffff7f366a1 <std::rt::lang_start_internal+449>:	add    %rcx,%rax

0x7ffff7f366a4: => 0x7ffff7f366a4 <std::rt::lang_start_internal+452>:	jmpq   *%rax

0x7ffff7f366b8: => 0x7ffff7f366b8 <std::rt::lang_start_internal+472>:	mov    $0xd,%edi

0x7ffff7f366bd: => 0x7ffff7f366bd <std::rt::lang_start_internal+477>:	callq  *0x8ec8d(%rip)        # 0x7ffff7fc5350

0x7ffff7ccbf00: => 0x7ffff7ccbf00 <__bsd_signal>:	endbr64 

0x7ffff7ccbf04: => 0x7ffff7ccbf04 <__bsd_signal+4>:	lea    -0x1(%rdi),%eax

0x7ffff7ccbf07: => 0x7ffff7ccbf07 <__bsd_signal+7>:	cmp    $0x3f,%eax

0x7ffff7ccbf0a: => 0x7ffff7ccbf0a <__bsd_signal+10>:	ja     0x7ffff7ccbf20 <__bsd_signal+32>

0x7ffff7ccbf0c: => 0x7ffff7ccbf0c <__bsd_signal+12>:	cmp    $0xffffffffffffffff,%rsi

0x7ffff7ccbf10: => 0x7ffff7ccbf10 <__bsd_signal+16>:	je     0x7ffff7ccbf20 <__bsd_signal+32>

0x7ffff7ccbf12: => 0x7ffff7ccbf12 <__bsd_signal+18>:	lea    -0x20(%rdi),%eax

0x7ffff7ccbf15: => 0x7ffff7ccbf15 <__bsd_signal+21>:	cmp    $0x1,%eax

0x7ffff7ccbf18: => 0x7ffff7ccbf18 <__bsd_signal+24>:	jbe    0x7ffff7ccbf20 <__bsd_signal+32>

0x7ffff7ccbf1a: => 0x7ffff7ccbf1a <__bsd_signal+26>:	jmpq   0x7ffff7ccbe60 <__bsd_signal>

0x7ffff7ccbe60: => 0x7ffff7ccbe60 <__bsd_signal>:	sub    $0x148,%rsp

0x7ffff7ccbe67: => 0x7ffff7ccbe67 <__bsd_signal+7>:	mov    %edi,%r8d

0x7ffff7ccbe6a: => 0x7ffff7ccbe6a <__bsd_signal+10>:	mov    $0x10,%ecx

0x7ffff7ccbe6f: => 0x7ffff7ccbe6f <__bsd_signal+15>:	mov    %fs:0x28,%rax

0x7ffff7ccbe78: => 0x7ffff7ccbe78 <__bsd_signal+24>:	mov    %rax,0x138(%rsp)

0x7ffff7ccbe80: => 0x7ffff7ccbe80 <__bsd_signal+32>:	xor    %eax,%eax

0x7ffff7ccbe82: => 0x7ffff7ccbe82 <__bsd_signal+34>:	lea    0x8(%rsp),%rdx

0x7ffff7ccbe87: => 0x7ffff7ccbe87 <__bsd_signal+39>:	mov    %rsi,(%rsp)

0x7ffff7ccbe8b: => 0x7ffff7ccbe8b <__bsd_signal+43>:	mov    %rsp,%rsi

0x7ffff7ccbe8e: => 0x7ffff7ccbe8e <__bsd_signal+46>:	mov    %rdx,%rdi

0x7ffff7ccbe91: => 0x7ffff7ccbe91 <__bsd_signal+49>:	lea    0xa0(%rsp),%rdx

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe9c: => 0x7ffff7ccbe9c <__bsd_signal+60>:	lea    -0x1(%r8),%ecx

0x7ffff7ccbea0: => 0x7ffff7ccbea0 <__bsd_signal+64>:	mov    $0x1,%eax

0x7ffff7ccbea5: => 0x7ffff7ccbea5 <__bsd_signal+69>:	mov    %r8d,%edi

0x7ffff7ccbea8: => 0x7ffff7ccbea8 <__bsd_signal+72>:	shl    %cl,%rax

0x7ffff7ccbeab: => 0x7ffff7ccbeab <__bsd_signal+75>:	or     %rax,0x8(%rsp)

0x7ffff7ccbeb0: => 0x7ffff7ccbeb0 <__bsd_signal+80>:	test   %rax,0x1ae3a9(%rip)        # 0x7ffff7e7a260 <_sigintr>

0x7ffff7ccbeb7: => 0x7ffff7ccbeb7 <__bsd_signal+87>:	sete   %al

0x7ffff7ccbeba: => 0x7ffff7ccbeba <__bsd_signal+90>:	movzbl %al,%eax

0x7ffff7ccbebd: => 0x7ffff7ccbebd <__bsd_signal+93>:	shl    $0x1c,%eax

0x7ffff7ccbec0: => 0x7ffff7ccbec0 <__bsd_signal+96>:	mov    %eax,0x88(%rsp)

0x7ffff7ccbec7: => 0x7ffff7ccbec7 <__bsd_signal+103>:	callq  0x7ffff7ccc280 <__GI___sigaction>

0x7ffff7ccc280: => 0x7ffff7ccc280 <__GI___sigaction>:	endbr64 

0x7ffff7ccc284: => 0x7ffff7ccc284 <__GI___sigaction+4>:	lea    -0x1(%rdi),%eax

0x7ffff7ccc287: => 0x7ffff7ccc287 <__GI___sigaction+7>:	cmp    $0x3f,%eax

0x7ffff7ccc28a: => 0x7ffff7ccc28a <__GI___sigaction+10>:	ja     0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc28c: => 0x7ffff7ccc28c <__GI___sigaction+12>:	lea    -0x20(%rdi),%eax

0x7ffff7ccc28f: => 0x7ffff7ccc28f <__GI___sigaction+15>:	cmp    $0x1,%eax

0x7ffff7ccc292: => 0x7ffff7ccc292 <__GI___sigaction+18>:	jbe    0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc294: => 0x7ffff7ccc294 <__GI___sigaction+20>:	jmpq   0x7ffff7ccc0a0 <__GI___libc_sigaction>

0x7ffff7ccc0a0: => 0x7ffff7ccc0a0 <__GI___libc_sigaction>:	endbr64 

0x7ffff7ccc0a4: => 0x7ffff7ccc0a4 <__GI___libc_sigaction+4>:	sub    $0x148,%rsp

0x7ffff7ccc0ab: => 0x7ffff7ccc0ab <__GI___libc_sigaction+11>:	mov    %rdx,%r8

0x7ffff7ccc0ae: => 0x7ffff7ccc0ae <__GI___libc_sigaction+14>:	mov    %fs:0x28,%rax

0x7ffff7ccc0b7: => 0x7ffff7ccc0b7 <__GI___libc_sigaction+23>:	mov    %rax,0x138(%rsp)

0x7ffff7ccc0bf: => 0x7ffff7ccc0bf <__GI___libc_sigaction+31>:	xor    %eax,%eax

0x7ffff7ccc0c1: => 0x7ffff7ccc0c1 <__GI___libc_sigaction+33>:	test   %rsi,%rsi

0x7ffff7ccc0c4: => 0x7ffff7ccc0c4 <__GI___libc_sigaction+36>:	je     0x7ffff7ccc240 <__GI___libc_sigaction+416>

0x7ffff7ccc0ca: => 0x7ffff7ccc0ca <__GI___libc_sigaction+42>:	mov    (%rsi),%rax

0x7ffff7ccc0cd: => 0x7ffff7ccc0cd <__GI___libc_sigaction+45>:	movdqu 0x8(%rsi),%xmm0

0x7ffff7ccc0d2: => 0x7ffff7ccc0d2 <__GI___libc_sigaction+50>:	lea    0xa0(%rsp),%rdx

0x7ffff7ccc0da: => 0x7ffff7ccc0da <__GI___libc_sigaction+58>:	movdqu 0x18(%rsi),%xmm1

0x7ffff7ccc0df: => 0x7ffff7ccc0df <__GI___libc_sigaction+63>:	movdqu 0x28(%rsi),%xmm2

0x7ffff7ccc0e4: => 0x7ffff7ccc0e4 <__GI___libc_sigaction+68>:	movdqu 0x38(%rsi),%xmm3

0x7ffff7ccc0e9: => 0x7ffff7ccc0e9 <__GI___libc_sigaction+73>:	movdqu 0x48(%rsi),%xmm4

0x7ffff7ccc0ee: => 0x7ffff7ccc0ee <__GI___libc_sigaction+78>:	mov    %rax,(%rsp)

0x7ffff7ccc0f2: => 0x7ffff7ccc0f2 <__GI___libc_sigaction+82>:	mov    0x88(%rsi),%eax

0x7ffff7ccc0f8: => 0x7ffff7ccc0f8 <__GI___libc_sigaction+88>:	movdqu 0x58(%rsi),%xmm5

0x7ffff7ccc0fd: => 0x7ffff7ccc0fd <__GI___libc_sigaction+93>:	movups %xmm0,0x18(%rsp)

0x7ffff7ccc102: => 0x7ffff7ccc102 <__GI___libc_sigaction+98>:	movdqu 0x68(%rsi),%xmm6

0x7ffff7ccc107: => 0x7ffff7ccc107 <__GI___libc_sigaction+103>:	movdqu 0x78(%rsi),%xmm7

0x7ffff7ccc10c: => 0x7ffff7ccc10c <__GI___libc_sigaction+108>:	movups %xmm1,0x28(%rsp)

0x7ffff7ccc111: => 0x7ffff7ccc111 <__GI___libc_sigaction+113>:	mov    %rsp,%rsi

0x7ffff7ccc114: => 0x7ffff7ccc114 <__GI___libc_sigaction+116>:	or     $0x4000000,%eax

0x7ffff7ccc119: => 0x7ffff7ccc119 <__GI___libc_sigaction+121>:	test   %r8,%r8

0x7ffff7ccc11c: => 0x7ffff7ccc11c <__GI___libc_sigaction+124>:	movups %xmm2,0x38(%rsp)

0x7ffff7ccc121: => 0x7ffff7ccc121 <__GI___libc_sigaction+129>:	cltq   

0x7ffff7ccc123: => 0x7ffff7ccc123 <__GI___libc_sigaction+131>:	movups %xmm3,0x48(%rsp)

0x7ffff7ccc128: => 0x7ffff7ccc128 <__GI___libc_sigaction+136>:	mov    %rax,0x8(%rsp)

0x7ffff7ccc12d: => 0x7ffff7ccc12d <__GI___libc_sigaction+141>:	lea    -0xa4(%rip),%rax        # 0x7ffff7ccc090 <__restore_rt>

0x7ffff7ccc134: => 0x7ffff7ccc134 <__GI___libc_sigaction+148>:	mov    %rax,0x10(%rsp)

0x7ffff7ccc139: => 0x7ffff7ccc139 <__GI___libc_sigaction+153>:	mov    $0x0,%eax

0x7ffff7ccc13e: => 0x7ffff7ccc13e <__GI___libc_sigaction+158>:	cmove  %rax,%rdx

0x7ffff7ccc142: => 0x7ffff7ccc142 <__GI___libc_sigaction+162>:	movups %xmm4,0x58(%rsp)

0x7ffff7ccc147: => 0x7ffff7ccc147 <__GI___libc_sigaction+167>:	movups %xmm5,0x68(%rsp)

0x7ffff7ccc14c: => 0x7ffff7ccc14c <__GI___libc_sigaction+172>:	movups %xmm6,0x78(%rsp)

0x7ffff7ccc151: => 0x7ffff7ccc151 <__GI___libc_sigaction+177>:	movups %xmm7,0x88(%rsp)

0x7ffff7ccc159: => 0x7ffff7ccc159 <__GI___libc_sigaction+185>:	mov    $0x8,%r10d

0x7ffff7ccc15f: => 0x7ffff7ccc15f <__GI___libc_sigaction+191>:	mov    $0xd,%eax

0x7ffff7ccc164: => 0x7ffff7ccc164 <__GI___libc_sigaction+196>:	syscall 

0x7ffff7ccc166: => 0x7ffff7ccc166 <__GI___libc_sigaction+198>:	cmp    $0xfffffffffffff000,%rax

0x7ffff7ccc16c: => 0x7ffff7ccc16c <__GI___libc_sigaction+204>:	ja     0x7ffff7ccc260 <__GI___libc_sigaction+448>

0x7ffff7ccc172: => 0x7ffff7ccc172 <__GI___libc_sigaction+210>:	mov    %eax,%r9d

0x7ffff7ccc175: => 0x7ffff7ccc175 <__GI___libc_sigaction+213>:	test   %r8,%r8

0x7ffff7ccc178: => 0x7ffff7ccc178 <__GI___libc_sigaction+216>:	je     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc17e: => 0x7ffff7ccc17e <__GI___libc_sigaction+222>:	test   %eax,%eax

0x7ffff7ccc180: => 0x7ffff7ccc180 <__GI___libc_sigaction+224>:	js     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc186: => 0x7ffff7ccc186 <__GI___libc_sigaction+230>:	mov    0xa0(%rsp),%rax

0x7ffff7ccc18e: => 0x7ffff7ccc18e <__GI___libc_sigaction+238>:	movdqu 0xb8(%rsp),%xmm0

0x7ffff7ccc197: => 0x7ffff7ccc197 <__GI___libc_sigaction+247>:	movdqu 0xc8(%rsp),%xmm1

0x7ffff7ccc1a0: => 0x7ffff7ccc1a0 <__GI___libc_sigaction+256>:	movdqu 0xd8(%rsp),%xmm2

0x7ffff7ccc1a9: => 0x7ffff7ccc1a9 <__GI___libc_sigaction+265>:	movdqu 0xe8(%rsp),%xmm3

