0x405951: => 0x405951 <main+1>:	mov    %rsi,%rdx

0x405954: => 0x405954 <main+4>:	movslq %edi,%rsi

0x405957: => 0x405957 <main+7>:	lea    -0x23e(%rip),%rdi        # 0x405720 <_ZN3cat4main17h067c50f330bc8cd1E>

0x40595e: => 0x40595e <main+14>:	xor    %ecx,%ecx

0x405960: => 0x405960 <main+16>:	callq  0x402b10 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE>

0x402b10: => 0x402b10 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE>:	sub    $0x18,%rsp

0x402b14: => 0x402b14 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+4>:	mov    %ecx,%eax

0x402b16: => 0x402b16 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+6>:	mov    %rdx,%rcx

0x402b19: => 0x402b19 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+9>:	mov    %rsi,%rdx

0x402b1c: => 0x402b1c <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+12>:	mov    %rdi,0x10(%rsp)

0x402b21: => 0x402b21 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+17>:	lea    0x10(%rsp),%rdi

0x402b26: => 0x402b26 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+22>:	lea    0x605b(%rip),%rsi        # 0x408b88

0x402b2d: => 0x402b2d <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+29>:	movzbl %al,%r8d

0x402b31: => 0x402b31 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+33>:	callq  *0x6469(%rip)        # 0x408fa0

0x7ffff7f364e0: => 0x7ffff7f364e0 <std::rt::lang_start_internal>:	push   %rbp

0x7ffff7f364e1: => 0x7ffff7f364e1 <std::rt::lang_start_internal+1>:	push   %r15

0x7ffff7f364e3: => 0x7ffff7f364e3 <std::rt::lang_start_internal+3>:	push   %r14

0x7ffff7f364e5: => 0x7ffff7f364e5 <std::rt::lang_start_internal+5>:	push   %r13

0x7ffff7f364e7: => 0x7ffff7f364e7 <std::rt::lang_start_internal+7>:	push   %r12

0x7ffff7f364e9: => 0x7ffff7f364e9 <std::rt::lang_start_internal+9>:	push   %rbx

0x7ffff7f364ea: => 0x7ffff7f364ea <std::rt::lang_start_internal+10>:	sub    $0x118,%rsp

0x7ffff7f364f1: => 0x7ffff7f364f1 <std::rt::lang_start_internal+17>:	mov    %r8d,%ebp

0x7ffff7f364f4: => 0x7ffff7f364f4 <std::rt::lang_start_internal+20>:	mov    %rsi,%rbx

0x7ffff7f364f7: => 0x7ffff7f364f7 <std::rt::lang_start_internal+23>:	mov    %rdi,%r14

0x7ffff7f364fa: => 0x7ffff7f364fa <std::rt::lang_start_internal+26>:	movq   $0x0,0x70(%rsp)

0x7ffff7f36503: => 0x7ffff7f36503 <std::rt::lang_start_internal+35>:	movaps -0x5787a(%rip),%xmm0        # 0x7ffff7edec90

0x7ffff7f3650a: => 0x7ffff7f3650a <std::rt::lang_start_internal+42>:	movups %xmm0,0x78(%rsp)

0x7ffff7f3650f: => 0x7ffff7f3650f <std::rt::lang_start_internal+47>:	lea    0x70(%rsp),%r15

0x7ffff7f36514: => 0x7ffff7f36514 <std::rt::lang_start_internal+52>:	mov    0x8ee15(%rip),%r12        # 0x7ffff7fc5330

0x7ffff7f3651b: => 0x7ffff7f3651b <std::rt::lang_start_internal+59>:	mov    0x8ee16(%rip),%r13        # 0x7ffff7fc5338

0x7ffff7f36522: => 0x7ffff7f36522 <std::rt::lang_start_internal+66>:	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)

0x7ffff7f36530: => 0x7ffff7f36530 <std::rt::lang_start_internal+80>:	mov    $0x3,%esi

0x7ffff7f36535: => 0x7ffff7f36535 <std::rt::lang_start_internal+85>:	mov    %r15,%rdi

0x7ffff7f36538: => 0x7ffff7f36538 <std::rt::lang_start_internal+88>:	xor    %edx,%edx

0x7ffff7f3653a: => 0x7ffff7f3653a <std::rt::lang_start_internal+90>:	callq  *%r12

0x7ffff7d9bb70: => 0x7ffff7d9bb70 <__GI___poll>:	endbr64 

0x7ffff7d9bb74: => 0x7ffff7d9bb74 <__GI___poll+4>:	mov    %fs:0x18,%eax

0x7ffff7d9bb7c: => 0x7ffff7d9bb7c <__GI___poll+12>:	test   %eax,%eax

0x7ffff7d9bb7e: => 0x7ffff7d9bb7e <__GI___poll+14>:	jne    0x7ffff7d9bb90 <__GI___poll+32>

0x7ffff7d9bb80: => 0x7ffff7d9bb80 <__GI___poll+16>:	mov    $0x7,%eax

0x7ffff7d9bb85: => 0x7ffff7d9bb85 <__GI___poll+21>:	syscall 

0x7ffff7d9bb87: => 0x7ffff7d9bb87 <__GI___poll+23>:	cmp    $0xfffffffffffff000,%rax

0x7ffff7d9bb8d: => 0x7ffff7d9bb8d <__GI___poll+29>:	ja     0x7ffff7d9bbe0 <__GI___poll+112>

0x7ffff7d9bb8f: => 0x7ffff7d9bb8f <__GI___poll+31>:	retq   

0x7ffff7f3653d: => 0x7ffff7f3653d <std::rt::lang_start_internal+93>:	cmp    $0xffffffff,%eax

0x7ffff7f36540: => 0x7ffff7f36540 <std::rt::lang_start_internal+96>:	jne    0x7ffff7f3660e <std::rt::lang_start_internal+302>

0x7ffff7f3660e: => 0x7ffff7f3660e <std::rt::lang_start_internal+302>:	testb  $0x20,0x76(%rsp)

0x7ffff7f36613: => 0x7ffff7f36613 <std::rt::lang_start_internal+307>:	je     0x7ffff7f36634 <std::rt::lang_start_internal+340>

0x7ffff7f36634: => 0x7ffff7f36634 <std::rt::lang_start_internal+340>:	testb  $0x20,0x7e(%rsp)

0x7ffff7f36639: => 0x7ffff7f36639 <std::rt::lang_start_internal+345>:	je     0x7ffff7f3665a <std::rt::lang_start_internal+378>

0x7ffff7f3665a: => 0x7ffff7f3665a <std::rt::lang_start_internal+378>:	testb  $0x20,0x86(%rsp)

0x7ffff7f36662: => 0x7ffff7f36662 <std::rt::lang_start_internal+386>:	je     0x7ffff7f36683 <std::rt::lang_start_internal+419>

0x7ffff7f36683: => 0x7ffff7f36683 <std::rt::lang_start_internal+419>:	cmp    $0x3,%bpl

0x7ffff7f36687: => 0x7ffff7f36687 <std::rt::lang_start_internal+423>:	ja     0x7ffff7f36ad3 <std::rt::lang_start_internal+1523>

0x7ffff7f3668d: => 0x7ffff7f3668d <std::rt::lang_start_internal+429>:	mov    $0x1,%esi

0x7ffff7f36692: => 0x7ffff7f36692 <std::rt::lang_start_internal+434>:	movzbl %bpl,%eax

0x7ffff7f36696: => 0x7ffff7f36696 <std::rt::lang_start_internal+438>:	lea    -0x57065(%rip),%rcx        # 0x7ffff7edf638

0x7ffff7f3669d: => 0x7ffff7f3669d <std::rt::lang_start_internal+445>:	movslq (%rcx,%rax,4),%rax

0x7ffff7f366a1: => 0x7ffff7f366a1 <std::rt::lang_start_internal+449>:	add    %rcx,%rax

0x7ffff7f366a4: => 0x7ffff7f366a4 <std::rt::lang_start_internal+452>:	jmpq   *%rax

0x7ffff7f366b8: => 0x7ffff7f366b8 <std::rt::lang_start_internal+472>:	mov    $0xd,%edi

0x7ffff7f366bd: => 0x7ffff7f366bd <std::rt::lang_start_internal+477>:	callq  *0x8ec8d(%rip)        # 0x7ffff7fc5350

0x7ffff7ccbf00: => 0x7ffff7ccbf00 <__bsd_signal>:	endbr64 

0x7ffff7ccbf04: => 0x7ffff7ccbf04 <__bsd_signal+4>:	lea    -0x1(%rdi),%eax

0x7ffff7ccbf07: => 0x7ffff7ccbf07 <__bsd_signal+7>:	cmp    $0x3f,%eax

0x7ffff7ccbf0a: => 0x7ffff7ccbf0a <__bsd_signal+10>:	ja     0x7ffff7ccbf20 <__bsd_signal+32>

0x7ffff7ccbf0c: => 0x7ffff7ccbf0c <__bsd_signal+12>:	cmp    $0xffffffffffffffff,%rsi

0x7ffff7ccbf10: => 0x7ffff7ccbf10 <__bsd_signal+16>:	je     0x7ffff7ccbf20 <__bsd_signal+32>

0x7ffff7ccbf12: => 0x7ffff7ccbf12 <__bsd_signal+18>:	lea    -0x20(%rdi),%eax

0x7ffff7ccbf15: => 0x7ffff7ccbf15 <__bsd_signal+21>:	cmp    $0x1,%eax

0x7ffff7ccbf18: => 0x7ffff7ccbf18 <__bsd_signal+24>:	jbe    0x7ffff7ccbf20 <__bsd_signal+32>

0x7ffff7ccbf1a: => 0x7ffff7ccbf1a <__bsd_signal+26>:	jmpq   0x7ffff7ccbe60 <__bsd_signal>

0x7ffff7ccbe60: => 0x7ffff7ccbe60 <__bsd_signal>:	sub    $0x148,%rsp

0x7ffff7ccbe67: => 0x7ffff7ccbe67 <__bsd_signal+7>:	mov    %edi,%r8d

0x7ffff7ccbe6a: => 0x7ffff7ccbe6a <__bsd_signal+10>:	mov    $0x10,%ecx

0x7ffff7ccbe6f: => 0x7ffff7ccbe6f <__bsd_signal+15>:	mov    %fs:0x28,%rax

0x7ffff7ccbe78: => 0x7ffff7ccbe78 <__bsd_signal+24>:	mov    %rax,0x138(%rsp)

0x7ffff7ccbe80: => 0x7ffff7ccbe80 <__bsd_signal+32>:	xor    %eax,%eax

0x7ffff7ccbe82: => 0x7ffff7ccbe82 <__bsd_signal+34>:	lea    0x8(%rsp),%rdx

0x7ffff7ccbe87: => 0x7ffff7ccbe87 <__bsd_signal+39>:	mov    %rsi,(%rsp)

0x7ffff7ccbe8b: => 0x7ffff7ccbe8b <__bsd_signal+43>:	mov    %rsp,%rsi

0x7ffff7ccbe8e: => 0x7ffff7ccbe8e <__bsd_signal+46>:	mov    %rdx,%rdi

0x7ffff7ccbe91: => 0x7ffff7ccbe91 <__bsd_signal+49>:	lea    0xa0(%rsp),%rdx

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe99: => 0x7ffff7ccbe99 <__bsd_signal+57>:	rep stos %rax,%es:(%rdi)

0x7ffff7ccbe9c: => 0x7ffff7ccbe9c <__bsd_signal+60>:	lea    -0x1(%r8),%ecx

0x7ffff7ccbea0: => 0x7ffff7ccbea0 <__bsd_signal+64>:	mov    $0x1,%eax

0x7ffff7ccbea5: => 0x7ffff7ccbea5 <__bsd_signal+69>:	mov    %r8d,%edi

0x7ffff7ccbea8: => 0x7ffff7ccbea8 <__bsd_signal+72>:	shl    %cl,%rax

0x7ffff7ccbeab: => 0x7ffff7ccbeab <__bsd_signal+75>:	or     %rax,0x8(%rsp)

0x7ffff7ccbeb0: => 0x7ffff7ccbeb0 <__bsd_signal+80>:	test   %rax,0x1ae3a9(%rip)        # 0x7ffff7e7a260 <_sigintr>

0x7ffff7ccbeb7: => 0x7ffff7ccbeb7 <__bsd_signal+87>:	sete   %al

0x7ffff7ccbeba: => 0x7ffff7ccbeba <__bsd_signal+90>:	movzbl %al,%eax

0x7ffff7ccbebd: => 0x7ffff7ccbebd <__bsd_signal+93>:	shl    $0x1c,%eax

0x7ffff7ccbec0: => 0x7ffff7ccbec0 <__bsd_signal+96>:	mov    %eax,0x88(%rsp)

0x7ffff7ccbec7: => 0x7ffff7ccbec7 <__bsd_signal+103>:	callq  0x7ffff7ccc280 <__GI___sigaction>

0x7ffff7ccc280: => 0x7ffff7ccc280 <__GI___sigaction>:	endbr64 

0x7ffff7ccc284: => 0x7ffff7ccc284 <__GI___sigaction+4>:	lea    -0x1(%rdi),%eax

0x7ffff7ccc287: => 0x7ffff7ccc287 <__GI___sigaction+7>:	cmp    $0x3f,%eax

0x7ffff7ccc28a: => 0x7ffff7ccc28a <__GI___sigaction+10>:	ja     0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc28c: => 0x7ffff7ccc28c <__GI___sigaction+12>:	lea    -0x20(%rdi),%eax

0x7ffff7ccc28f: => 0x7ffff7ccc28f <__GI___sigaction+15>:	cmp    $0x1,%eax

0x7ffff7ccc292: => 0x7ffff7ccc292 <__GI___sigaction+18>:	jbe    0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc294: => 0x7ffff7ccc294 <__GI___sigaction+20>:	jmpq   0x7ffff7ccc0a0 <__GI___libc_sigaction>

0x7ffff7ccc0a0: => 0x7ffff7ccc0a0 <__GI___libc_sigaction>:	endbr64 

0x7ffff7ccc0a4: => 0x7ffff7ccc0a4 <__GI___libc_sigaction+4>:	sub    $0x148,%rsp

0x7ffff7ccc0ab: => 0x7ffff7ccc0ab <__GI___libc_sigaction+11>:	mov    %rdx,%r8

0x7ffff7ccc0ae: => 0x7ffff7ccc0ae <__GI___libc_sigaction+14>:	mov    %fs:0x28,%rax

0x7ffff7ccc0b7: => 0x7ffff7ccc0b7 <__GI___libc_sigaction+23>:	mov    %rax,0x138(%rsp)

0x7ffff7ccc0bf: => 0x7ffff7ccc0bf <__GI___libc_sigaction+31>:	xor    %eax,%eax

0x7ffff7ccc0c1: => 0x7ffff7ccc0c1 <__GI___libc_sigaction+33>:	test   %rsi,%rsi

0x7ffff7ccc0c4: => 0x7ffff7ccc0c4 <__GI___libc_sigaction+36>:	je     0x7ffff7ccc240 <__GI___libc_sigaction+416>

0x7ffff7ccc0ca: => 0x7ffff7ccc0ca <__GI___libc_sigaction+42>:	mov    (%rsi),%rax

0x7ffff7ccc0cd: => 0x7ffff7ccc0cd <__GI___libc_sigaction+45>:	movdqu 0x8(%rsi),%xmm0

0x7ffff7ccc0d2: => 0x7ffff7ccc0d2 <__GI___libc_sigaction+50>:	lea    0xa0(%rsp),%rdx

0x7ffff7ccc0da: => 0x7ffff7ccc0da <__GI___libc_sigaction+58>:	movdqu 0x18(%rsi),%xmm1

0x7ffff7ccc0df: => 0x7ffff7ccc0df <__GI___libc_sigaction+63>:	movdqu 0x28(%rsi),%xmm2

0x7ffff7ccc0e4: => 0x7ffff7ccc0e4 <__GI___libc_sigaction+68>:	movdqu 0x38(%rsi),%xmm3

0x7ffff7ccc0e9: => 0x7ffff7ccc0e9 <__GI___libc_sigaction+73>:	movdqu 0x48(%rsi),%xmm4

0x7ffff7ccc0ee: => 0x7ffff7ccc0ee <__GI___libc_sigaction+78>:	mov    %rax,(%rsp)

0x7ffff7ccc0f2: => 0x7ffff7ccc0f2 <__GI___libc_sigaction+82>:	mov    0x88(%rsi),%eax

0x7ffff7ccc0f8: => 0x7ffff7ccc0f8 <__GI___libc_sigaction+88>:	movdqu 0x58(%rsi),%xmm5

0x7ffff7ccc0fd: => 0x7ffff7ccc0fd <__GI___libc_sigaction+93>:	movups %xmm0,0x18(%rsp)

0x7ffff7ccc102: => 0x7ffff7ccc102 <__GI___libc_sigaction+98>:	movdqu 0x68(%rsi),%xmm6

0x7ffff7ccc107: => 0x7ffff7ccc107 <__GI___libc_sigaction+103>:	movdqu 0x78(%rsi),%xmm7

0x7ffff7ccc10c: => 0x7ffff7ccc10c <__GI___libc_sigaction+108>:	movups %xmm1,0x28(%rsp)

0x7ffff7ccc111: => 0x7ffff7ccc111 <__GI___libc_sigaction+113>:	mov    %rsp,%rsi

0x7ffff7ccc114: => 0x7ffff7ccc114 <__GI___libc_sigaction+116>:	or     $0x4000000,%eax

0x7ffff7ccc119: => 0x7ffff7ccc119 <__GI___libc_sigaction+121>:	test   %r8,%r8

0x7ffff7ccc11c: => 0x7ffff7ccc11c <__GI___libc_sigaction+124>:	movups %xmm2,0x38(%rsp)

0x7ffff7ccc121: => 0x7ffff7ccc121 <__GI___libc_sigaction+129>:	cltq   

0x7ffff7ccc123: => 0x7ffff7ccc123 <__GI___libc_sigaction+131>:	movups %xmm3,0x48(%rsp)

0x7ffff7ccc128: => 0x7ffff7ccc128 <__GI___libc_sigaction+136>:	mov    %rax,0x8(%rsp)

0x7ffff7ccc12d: => 0x7ffff7ccc12d <__GI___libc_sigaction+141>:	lea    -0xa4(%rip),%rax        # 0x7ffff7ccc090 <__restore_rt>

0x7ffff7ccc134: => 0x7ffff7ccc134 <__GI___libc_sigaction+148>:	mov    %rax,0x10(%rsp)

0x7ffff7ccc139: => 0x7ffff7ccc139 <__GI___libc_sigaction+153>:	mov    $0x0,%eax

0x7ffff7ccc13e: => 0x7ffff7ccc13e <__GI___libc_sigaction+158>:	cmove  %rax,%rdx

0x7ffff7ccc142: => 0x7ffff7ccc142 <__GI___libc_sigaction+162>:	movups %xmm4,0x58(%rsp)

0x7ffff7ccc147: => 0x7ffff7ccc147 <__GI___libc_sigaction+167>:	movups %xmm5,0x68(%rsp)

0x7ffff7ccc14c: => 0x7ffff7ccc14c <__GI___libc_sigaction+172>:	movups %xmm6,0x78(%rsp)

0x7ffff7ccc151: => 0x7ffff7ccc151 <__GI___libc_sigaction+177>:	movups %xmm7,0x88(%rsp)

0x7ffff7ccc159: => 0x7ffff7ccc159 <__GI___libc_sigaction+185>:	mov    $0x8,%r10d

0x7ffff7ccc15f: => 0x7ffff7ccc15f <__GI___libc_sigaction+191>:	mov    $0xd,%eax

0x7ffff7ccc164: => 0x7ffff7ccc164 <__GI___libc_sigaction+196>:	syscall 

0x7ffff7ccc166: => 0x7ffff7ccc166 <__GI___libc_sigaction+198>:	cmp    $0xfffffffffffff000,%rax

0x7ffff7ccc16c: => 0x7ffff7ccc16c <__GI___libc_sigaction+204>:	ja     0x7ffff7ccc260 <__GI___libc_sigaction+448>

0x7ffff7ccc172: => 0x7ffff7ccc172 <__GI___libc_sigaction+210>:	mov    %eax,%r9d

0x7ffff7ccc175: => 0x7ffff7ccc175 <__GI___libc_sigaction+213>:	test   %r8,%r8

0x7ffff7ccc178: => 0x7ffff7ccc178 <__GI___libc_sigaction+216>:	je     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc17e: => 0x7ffff7ccc17e <__GI___libc_sigaction+222>:	test   %eax,%eax

0x7ffff7ccc180: => 0x7ffff7ccc180 <__GI___libc_sigaction+224>:	js     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc186: => 0x7ffff7ccc186 <__GI___libc_sigaction+230>:	mov    0xa0(%rsp),%rax

0x7ffff7ccc18e: => 0x7ffff7ccc18e <__GI___libc_sigaction+238>:	movdqu 0xb8(%rsp),%xmm0

0x7ffff7ccc197: => 0x7ffff7ccc197 <__GI___libc_sigaction+247>:	movdqu 0xc8(%rsp),%xmm1

0x7ffff7ccc1a0: => 0x7ffff7ccc1a0 <__GI___libc_sigaction+256>:	movdqu 0xd8(%rsp),%xmm2

0x7ffff7ccc1a9: => 0x7ffff7ccc1a9 <__GI___libc_sigaction+265>:	movdqu 0xe8(%rsp),%xmm3

0x7ffff7ccc1b2: => 0x7ffff7ccc1b2 <__GI___libc_sigaction+274>:	mov    %rax,(%r8)

0x7ffff7ccc1b5: => 0x7ffff7ccc1b5 <__GI___libc_sigaction+277>:	mov    0xa8(%rsp),%rax

0x7ffff7ccc1bd: => 0x7ffff7ccc1bd <__GI___libc_sigaction+285>:	movups %xmm0,0x8(%r8)

0x7ffff7ccc1c2: => 0x7ffff7ccc1c2 <__GI___libc_sigaction+290>:	movdqu 0xf8(%rsp),%xmm4

0x7ffff7ccc1cb: => 0x7ffff7ccc1cb <__GI___libc_sigaction+299>:	movdqu 0x108(%rsp),%xmm5

0x7ffff7ccc1d4: => 0x7ffff7ccc1d4 <__GI___libc_sigaction+308>:	movups %xmm1,0x18(%r8)

0x7ffff7ccc1d9: => 0x7ffff7ccc1d9 <__GI___libc_sigaction+313>:	movdqu 0x118(%rsp),%xmm6

0x7ffff7ccc1e2: => 0x7ffff7ccc1e2 <__GI___libc_sigaction+322>:	movdqu 0x128(%rsp),%xmm7

0x7ffff7ccc1eb: => 0x7ffff7ccc1eb <__GI___libc_sigaction+331>:	mov    %eax,0x88(%r8)

0x7ffff7ccc1f2: => 0x7ffff7ccc1f2 <__GI___libc_sigaction+338>:	mov    0xb0(%rsp),%rax

0x7ffff7ccc1fa: => 0x7ffff7ccc1fa <__GI___libc_sigaction+346>:	movups %xmm2,0x28(%r8)

0x7ffff7ccc1ff: => 0x7ffff7ccc1ff <__GI___libc_sigaction+351>:	movups %xmm3,0x38(%r8)

0x7ffff7ccc204: => 0x7ffff7ccc204 <__GI___libc_sigaction+356>:	mov    %rax,0x90(%r8)

0x7ffff7ccc20b: => 0x7ffff7ccc20b <__GI___libc_sigaction+363>:	movups %xmm4,0x48(%r8)

0x7ffff7ccc210: => 0x7ffff7ccc210 <__GI___libc_sigaction+368>:	movups %xmm5,0x58(%r8)

0x7ffff7ccc215: => 0x7ffff7ccc215 <__GI___libc_sigaction+373>:	movups %xmm6,0x68(%r8)

0x7ffff7ccc21a: => 0x7ffff7ccc21a <__GI___libc_sigaction+378>:	movups %xmm7,0x78(%r8)

0x7ffff7ccc21f: => 0x7ffff7ccc21f <__GI___libc_sigaction+383>:	mov    0x138(%rsp),%rax

0x7ffff7ccc227: => 0x7ffff7ccc227 <__GI___libc_sigaction+391>:	xor    %fs:0x28,%rax

0x7ffff7ccc230: => 0x7ffff7ccc230 <__GI___libc_sigaction+400>:	jne    0x7ffff7ccc274 <__GI___libc_sigaction+468>

0x7ffff7ccc232: => 0x7ffff7ccc232 <__GI___libc_sigaction+402>:	mov    %r9d,%eax

0x7ffff7ccc235: => 0x7ffff7ccc235 <__GI___libc_sigaction+405>:	add    $0x148,%rsp

0x7ffff7ccc23c: => 0x7ffff7ccc23c <__GI___libc_sigaction+412>:	retq   

0x7ffff7ccbecc: => 0x7ffff7ccbecc <__bsd_signal+108>:	test   %eax,%eax

0x7ffff7ccbece: => 0x7ffff7ccbece <__bsd_signal+110>:	mov    $0xffffffffffffffff,%rax

0x7ffff7ccbed5: => 0x7ffff7ccbed5 <__bsd_signal+117>:	cmovns 0xa0(%rsp),%rax

0x7ffff7ccbede: => 0x7ffff7ccbede <__bsd_signal+126>:	mov    0x138(%rsp),%rcx

0x7ffff7ccbee6: => 0x7ffff7ccbee6 <__bsd_signal+134>:	xor    %fs:0x28,%rcx

0x7ffff7ccbeef: => 0x7ffff7ccbeef <__bsd_signal+143>:	jne    0x7ffff7ccbef9 <__bsd_signal+153>

0x7ffff7ccbef1: => 0x7ffff7ccbef1 <__bsd_signal+145>:	add    $0x148,%rsp

0x7ffff7ccbef8: => 0x7ffff7ccbef8 <__bsd_signal+152>:	retq   

0x7ffff7f366c3: => 0x7ffff7f366c3 <std::rt::lang_start_internal+483>:	cmp    $0xffffffffffffffff,%rax

0x7ffff7f366c7: => 0x7ffff7f366c7 <std::rt::lang_start_internal+487>:	je     0x7ffff7f36a1f <std::rt::lang_start_internal+1343>

0x7ffff7f366cd: => 0x7ffff7f366cd <std::rt::lang_start_internal+493>:	xorps  %xmm0,%xmm0

0x7ffff7f366d0: => 0x7ffff7f366d0 <std::rt::lang_start_internal+496>:	movaps %xmm0,0xf0(%rsp)

0x7ffff7f366d8: => 0x7ffff7f366d8 <std::rt::lang_start_internal+504>:	movaps %xmm0,0xe0(%rsp)

0x7ffff7f366e0: => 0x7ffff7f366e0 <std::rt::lang_start_internal+512>:	movaps %xmm0,0xd0(%rsp)

0x7ffff7f366e8: => 0x7ffff7f366e8 <std::rt::lang_start_internal+520>:	movaps %xmm0,0xc0(%rsp)

0x7ffff7f366f0: => 0x7ffff7f366f0 <std::rt::lang_start_internal+528>:	movaps %xmm0,0xb0(%rsp)

0x7ffff7f366f8: => 0x7ffff7f366f8 <std::rt::lang_start_internal+536>:	movaps %xmm0,0xa0(%rsp)

0x7ffff7f36700: => 0x7ffff7f36700 <std::rt::lang_start_internal+544>:	movaps %xmm0,0x90(%rsp)

0x7ffff7f36708: => 0x7ffff7f36708 <std::rt::lang_start_internal+552>:	movaps %xmm0,0x80(%rsp)

0x7ffff7f36710: => 0x7ffff7f36710 <std::rt::lang_start_internal+560>:	movaps %xmm0,0x70(%rsp)

0x7ffff7f36715: => 0x7ffff7f36715 <std::rt::lang_start_internal+565>:	movq   $0x0,0x100(%rsp)

0x7ffff7f36721: => 0x7ffff7f36721 <std::rt::lang_start_internal+577>:	lea    0x70(%rsp),%rdx

0x7ffff7f36726: => 0x7ffff7f36726 <std::rt::lang_start_internal+582>:	mov    $0xb,%edi

0x7ffff7f3672b: => 0x7ffff7f3672b <std::rt::lang_start_internal+587>:	xor    %esi,%esi

0x7ffff7f3672d: => 0x7ffff7f3672d <std::rt::lang_start_internal+589>:	callq  *0x8ec25(%rip)        # 0x7ffff7fc5358

0x7ffff7ccc280: => 0x7ffff7ccc280 <__GI___sigaction>:	endbr64 

0x7ffff7ccc284: => 0x7ffff7ccc284 <__GI___sigaction+4>:	lea    -0x1(%rdi),%eax

0x7ffff7ccc287: => 0x7ffff7ccc287 <__GI___sigaction+7>:	cmp    $0x3f,%eax

0x7ffff7ccc28a: => 0x7ffff7ccc28a <__GI___sigaction+10>:	ja     0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc28c: => 0x7ffff7ccc28c <__GI___sigaction+12>:	lea    -0x20(%rdi),%eax

0x7ffff7ccc28f: => 0x7ffff7ccc28f <__GI___sigaction+15>:	cmp    $0x1,%eax

0x7ffff7ccc292: => 0x7ffff7ccc292 <__GI___sigaction+18>:	jbe    0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc294: => 0x7ffff7ccc294 <__GI___sigaction+20>:	jmpq   0x7ffff7ccc0a0 <__GI___libc_sigaction>

0x7ffff7ccc0a0: => 0x7ffff7ccc0a0 <__GI___libc_sigaction>:	endbr64 

0x7ffff7ccc0a4: => 0x7ffff7ccc0a4 <__GI___libc_sigaction+4>:	sub    $0x148,%rsp

0x7ffff7ccc0ab: => 0x7ffff7ccc0ab <__GI___libc_sigaction+11>:	mov    %rdx,%r8

0x7ffff7ccc0ae: => 0x7ffff7ccc0ae <__GI___libc_sigaction+14>:	mov    %fs:0x28,%rax

0x7ffff7ccc0b7: => 0x7ffff7ccc0b7 <__GI___libc_sigaction+23>:	mov    %rax,0x138(%rsp)

0x7ffff7ccc0bf: => 0x7ffff7ccc0bf <__GI___libc_sigaction+31>:	xor    %eax,%eax

0x7ffff7ccc0c1: => 0x7ffff7ccc0c1 <__GI___libc_sigaction+33>:	test   %rsi,%rsi

0x7ffff7ccc0c4: => 0x7ffff7ccc0c4 <__GI___libc_sigaction+36>:	je     0x7ffff7ccc240 <__GI___libc_sigaction+416>

0x7ffff7ccc240: => 0x7ffff7ccc240 <__GI___libc_sigaction+416>:	xor    %esi,%esi

0x7ffff7ccc242: => 0x7ffff7ccc242 <__GI___libc_sigaction+418>:	lea    0xa0(%rsp),%rdx

0x7ffff7ccc24a: => 0x7ffff7ccc24a <__GI___libc_sigaction+426>:	test   %r8,%r8

0x7ffff7ccc24d: => 0x7ffff7ccc24d <__GI___libc_sigaction+429>:	cmove  %rsi,%rdx

0x7ffff7ccc251: => 0x7ffff7ccc251 <__GI___libc_sigaction+433>:	jmpq   0x7ffff7ccc159 <__GI___libc_sigaction+185>

0x7ffff7ccc159: => 0x7ffff7ccc159 <__GI___libc_sigaction+185>:	mov    $0x8,%r10d

0x7ffff7ccc15f: => 0x7ffff7ccc15f <__GI___libc_sigaction+191>:	mov    $0xd,%eax

0x7ffff7ccc164: => 0x7ffff7ccc164 <__GI___libc_sigaction+196>:	syscall 

0x7ffff7ccc166: => 0x7ffff7ccc166 <__GI___libc_sigaction+198>:	cmp    $0xfffffffffffff000,%rax

0x7ffff7ccc16c: => 0x7ffff7ccc16c <__GI___libc_sigaction+204>:	ja     0x7ffff7ccc260 <__GI___libc_sigaction+448>

0x7ffff7ccc172: => 0x7ffff7ccc172 <__GI___libc_sigaction+210>:	mov    %eax,%r9d

0x7ffff7ccc175: => 0x7ffff7ccc175 <__GI___libc_sigaction+213>:	test   %r8,%r8

0x7ffff7ccc178: => 0x7ffff7ccc178 <__GI___libc_sigaction+216>:	je     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc17e: => 0x7ffff7ccc17e <__GI___libc_sigaction+222>:	test   %eax,%eax

0x7ffff7ccc180: => 0x7ffff7ccc180 <__GI___libc_sigaction+224>:	js     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc186: => 0x7ffff7ccc186 <__GI___libc_sigaction+230>:	mov    0xa0(%rsp),%rax

0x7ffff7ccc18e: => 0x7ffff7ccc18e <__GI___libc_sigaction+238>:	movdqu 0xb8(%rsp),%xmm0

0x7ffff7ccc197: => 0x7ffff7ccc197 <__GI___libc_sigaction+247>:	movdqu 0xc8(%rsp),%xmm1

0x7ffff7ccc1a0: => 0x7ffff7ccc1a0 <__GI___libc_sigaction+256>:	movdqu 0xd8(%rsp),%xmm2

0x7ffff7ccc1a9: => 0x7ffff7ccc1a9 <__GI___libc_sigaction+265>:	movdqu 0xe8(%rsp),%xmm3

0x7ffff7ccc1b2: => 0x7ffff7ccc1b2 <__GI___libc_sigaction+274>:	mov    %rax,(%r8)

0x7ffff7ccc1b5: => 0x7ffff7ccc1b5 <__GI___libc_sigaction+277>:	mov    0xa8(%rsp),%rax

0x7ffff7ccc1bd: => 0x7ffff7ccc1bd <__GI___libc_sigaction+285>:	movups %xmm0,0x8(%r8)

0x7ffff7ccc1c2: => 0x7ffff7ccc1c2 <__GI___libc_sigaction+290>:	movdqu 0xf8(%rsp),%xmm4

0x7ffff7ccc1cb: => 0x7ffff7ccc1cb <__GI___libc_sigaction+299>:	movdqu 0x108(%rsp),%xmm5

0x7ffff7ccc1d4: => 0x7ffff7ccc1d4 <__GI___libc_sigaction+308>:	movups %xmm1,0x18(%r8)

0x7ffff7ccc1d9: => 0x7ffff7ccc1d9 <__GI___libc_sigaction+313>:	movdqu 0x118(%rsp),%xmm6

0x7ffff7ccc1e2: => 0x7ffff7ccc1e2 <__GI___libc_sigaction+322>:	movdqu 0x128(%rsp),%xmm7

0x7ffff7ccc1eb: => 0x7ffff7ccc1eb <__GI___libc_sigaction+331>:	mov    %eax,0x88(%r8)

0x7ffff7ccc1f2: => 0x7ffff7ccc1f2 <__GI___libc_sigaction+338>:	mov    0xb0(%rsp),%rax

0x7ffff7ccc1fa: => 0x7ffff7ccc1fa <__GI___libc_sigaction+346>:	movups %xmm2,0x28(%r8)

0x7ffff7ccc1ff: => 0x7ffff7ccc1ff <__GI___libc_sigaction+351>:	movups %xmm3,0x38(%r8)

0x7ffff7ccc204: => 0x7ffff7ccc204 <__GI___libc_sigaction+356>:	mov    %rax,0x90(%r8)

0x7ffff7ccc20b: => 0x7ffff7ccc20b <__GI___libc_sigaction+363>:	movups %xmm4,0x48(%r8)

0x7ffff7ccc210: => 0x7ffff7ccc210 <__GI___libc_sigaction+368>:	movups %xmm5,0x58(%r8)

0x7ffff7ccc215: => 0x7ffff7ccc215 <__GI___libc_sigaction+373>:	movups %xmm6,0x68(%r8)

0x7ffff7ccc21a: => 0x7ffff7ccc21a <__GI___libc_sigaction+378>:	movups %xmm7,0x78(%r8)

0x7ffff7ccc21f: => 0x7ffff7ccc21f <__GI___libc_sigaction+383>:	mov    0x138(%rsp),%rax

0x7ffff7ccc227: => 0x7ffff7ccc227 <__GI___libc_sigaction+391>:	xor    %fs:0x28,%rax

0x7ffff7ccc230: => 0x7ffff7ccc230 <__GI___libc_sigaction+400>:	jne    0x7ffff7ccc274 <__GI___libc_sigaction+468>

0x7ffff7ccc232: => 0x7ffff7ccc232 <__GI___libc_sigaction+402>:	mov    %r9d,%eax

0x7ffff7ccc235: => 0x7ffff7ccc235 <__GI___libc_sigaction+405>:	add    $0x148,%rsp

0x7ffff7ccc23c: => 0x7ffff7ccc23c <__GI___libc_sigaction+412>:	retq   

0x7ffff7f36733: => 0x7ffff7f36733 <std::rt::lang_start_internal+595>:	cmpq   $0x0,0x70(%rsp)

0x7ffff7f36739: => 0x7ffff7f36739 <std::rt::lang_start_internal+601>:	jne    0x7ffff7f3676b <std::rt::lang_start_internal+651>

0x7ffff7f3673b: => 0x7ffff7f3673b <std::rt::lang_start_internal+603>:	movl   $0x8000004,0xf8(%rsp)

0x7ffff7f36746: => 0x7ffff7f36746 <std::rt::lang_start_internal+614>:	lea    0x284d3(%rip),%rax        # 0x7ffff7f5ec20 <std::sys::pal::unix::stack_overflow::imp::signal_handler>

0x7ffff7f3674d: => 0x7ffff7f3674d <std::rt::lang_start_internal+621>:	mov    %rax,0x70(%rsp)

0x7ffff7f36752: => 0x7ffff7f36752 <std::rt::lang_start_internal+626>:	lea    0x70(%rsp),%rsi

0x7ffff7f36757: => 0x7ffff7f36757 <std::rt::lang_start_internal+631>:	mov    $0xb,%edi

0x7ffff7f3675c: => 0x7ffff7f3675c <std::rt::lang_start_internal+636>:	xor    %edx,%edx

0x7ffff7f3675e: => 0x7ffff7f3675e <std::rt::lang_start_internal+638>:	callq  *0x8ebf4(%rip)        # 0x7ffff7fc5358

0x7ffff7ccc280: => 0x7ffff7ccc280 <__GI___sigaction>:	endbr64 

0x7ffff7ccc284: => 0x7ffff7ccc284 <__GI___sigaction+4>:	lea    -0x1(%rdi),%eax

0x7ffff7ccc287: => 0x7ffff7ccc287 <__GI___sigaction+7>:	cmp    $0x3f,%eax

0x7ffff7ccc28a: => 0x7ffff7ccc28a <__GI___sigaction+10>:	ja     0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc28c: => 0x7ffff7ccc28c <__GI___sigaction+12>:	lea    -0x20(%rdi),%eax

0x7ffff7ccc28f: => 0x7ffff7ccc28f <__GI___sigaction+15>:	cmp    $0x1,%eax

0x7ffff7ccc292: => 0x7ffff7ccc292 <__GI___sigaction+18>:	jbe    0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc294: => 0x7ffff7ccc294 <__GI___sigaction+20>:	jmpq   0x7ffff7ccc0a0 <__GI___libc_sigaction>

0x7ffff7ccc0a0: => 0x7ffff7ccc0a0 <__GI___libc_sigaction>:	endbr64 

0x7ffff7ccc0a4: => 0x7ffff7ccc0a4 <__GI___libc_sigaction+4>:	sub    $0x148,%rsp

0x7ffff7ccc0ab: => 0x7ffff7ccc0ab <__GI___libc_sigaction+11>:	mov    %rdx,%r8

0x7ffff7ccc0ae: => 0x7ffff7ccc0ae <__GI___libc_sigaction+14>:	mov    %fs:0x28,%rax

0x7ffff7ccc0b7: => 0x7ffff7ccc0b7 <__GI___libc_sigaction+23>:	mov    %rax,0x138(%rsp)

0x7ffff7ccc0bf: => 0x7ffff7ccc0bf <__GI___libc_sigaction+31>:	xor    %eax,%eax

0x7ffff7ccc0c1: => 0x7ffff7ccc0c1 <__GI___libc_sigaction+33>:	test   %rsi,%rsi

0x7ffff7ccc0c4: => 0x7ffff7ccc0c4 <__GI___libc_sigaction+36>:	je     0x7ffff7ccc240 <__GI___libc_sigaction+416>

0x7ffff7ccc0ca: => 0x7ffff7ccc0ca <__GI___libc_sigaction+42>:	mov    (%rsi),%rax

0x7ffff7ccc0cd: => 0x7ffff7ccc0cd <__GI___libc_sigaction+45>:	movdqu 0x8(%rsi),%xmm0

0x7ffff7ccc0d2: => 0x7ffff7ccc0d2 <__GI___libc_sigaction+50>:	lea    0xa0(%rsp),%rdx

0x7ffff7ccc0da: => 0x7ffff7ccc0da <__GI___libc_sigaction+58>:	movdqu 0x18(%rsi),%xmm1

0x7ffff7ccc0df: => 0x7ffff7ccc0df <__GI___libc_sigaction+63>:	movdqu 0x28(%rsi),%xmm2

0x7ffff7ccc0e4: => 0x7ffff7ccc0e4 <__GI___libc_sigaction+68>:	movdqu 0x38(%rsi),%xmm3

0x7ffff7ccc0e9: => 0x7ffff7ccc0e9 <__GI___libc_sigaction+73>:	movdqu 0x48(%rsi),%xmm4

0x7ffff7ccc0ee: => 0x7ffff7ccc0ee <__GI___libc_sigaction+78>:	mov    %rax,(%rsp)

0x7ffff7ccc0f2: => 0x7ffff7ccc0f2 <__GI___libc_sigaction+82>:	mov    0x88(%rsi),%eax

0x7ffff7ccc0f8: => 0x7ffff7ccc0f8 <__GI___libc_sigaction+88>:	movdqu 0x58(%rsi),%xmm5

0x7ffff7ccc0fd: => 0x7ffff7ccc0fd <__GI___libc_sigaction+93>:	movups %xmm0,0x18(%rsp)

0x7ffff7ccc102: => 0x7ffff7ccc102 <__GI___libc_sigaction+98>:	movdqu 0x68(%rsi),%xmm6

0x7ffff7ccc107: => 0x7ffff7ccc107 <__GI___libc_sigaction+103>:	movdqu 0x78(%rsi),%xmm7

0x7ffff7ccc10c: => 0x7ffff7ccc10c <__GI___libc_sigaction+108>:	movups %xmm1,0x28(%rsp)

0x7ffff7ccc111: => 0x7ffff7ccc111 <__GI___libc_sigaction+113>:	mov    %rsp,%rsi

0x7ffff7ccc114: => 0x7ffff7ccc114 <__GI___libc_sigaction+116>:	or     $0x4000000,%eax

0x7ffff7ccc119: => 0x7ffff7ccc119 <__GI___libc_sigaction+121>:	test   %r8,%r8

0x7ffff7ccc11c: => 0x7ffff7ccc11c <__GI___libc_sigaction+124>:	movups %xmm2,0x38(%rsp)

0x7ffff7ccc121: => 0x7ffff7ccc121 <__GI___libc_sigaction+129>:	cltq   

0x7ffff7ccc123: => 0x7ffff7ccc123 <__GI___libc_sigaction+131>:	movups %xmm3,0x48(%rsp)

0x7ffff7ccc128: => 0x7ffff7ccc128 <__GI___libc_sigaction+136>:	mov    %rax,0x8(%rsp)

0x7ffff7ccc12d: => 0x7ffff7ccc12d <__GI___libc_sigaction+141>:	lea    -0xa4(%rip),%rax        # 0x7ffff7ccc090 <__restore_rt>

0x7ffff7ccc134: => 0x7ffff7ccc134 <__GI___libc_sigaction+148>:	mov    %rax,0x10(%rsp)

0x7ffff7ccc139: => 0x7ffff7ccc139 <__GI___libc_sigaction+153>:	mov    $0x0,%eax

0x7ffff7ccc13e: => 0x7ffff7ccc13e <__GI___libc_sigaction+158>:	cmove  %rax,%rdx

0x7ffff7ccc142: => 0x7ffff7ccc142 <__GI___libc_sigaction+162>:	movups %xmm4,0x58(%rsp)

0x7ffff7ccc147: => 0x7ffff7ccc147 <__GI___libc_sigaction+167>:	movups %xmm5,0x68(%rsp)

0x7ffff7ccc14c: => 0x7ffff7ccc14c <__GI___libc_sigaction+172>:	movups %xmm6,0x78(%rsp)

0x7ffff7ccc151: => 0x7ffff7ccc151 <__GI___libc_sigaction+177>:	movups %xmm7,0x88(%rsp)

0x7ffff7ccc159: => 0x7ffff7ccc159 <__GI___libc_sigaction+185>:	mov    $0x8,%r10d

0x7ffff7ccc15f: => 0x7ffff7ccc15f <__GI___libc_sigaction+191>:	mov    $0xd,%eax

0x7ffff7ccc164: => 0x7ffff7ccc164 <__GI___libc_sigaction+196>:	syscall 

0x7ffff7ccc166: => 0x7ffff7ccc166 <__GI___libc_sigaction+198>:	cmp    $0xfffffffffffff000,%rax

0x7ffff7ccc16c: => 0x7ffff7ccc16c <__GI___libc_sigaction+204>:	ja     0x7ffff7ccc260 <__GI___libc_sigaction+448>

0x7ffff7ccc172: => 0x7ffff7ccc172 <__GI___libc_sigaction+210>:	mov    %eax,%r9d

0x7ffff7ccc175: => 0x7ffff7ccc175 <__GI___libc_sigaction+213>:	test   %r8,%r8

0x7ffff7ccc178: => 0x7ffff7ccc178 <__GI___libc_sigaction+216>:	je     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc21f: => 0x7ffff7ccc21f <__GI___libc_sigaction+383>:	mov    0x138(%rsp),%rax

0x7ffff7ccc227: => 0x7ffff7ccc227 <__GI___libc_sigaction+391>:	xor    %fs:0x28,%rax

0x7ffff7ccc230: => 0x7ffff7ccc230 <__GI___libc_sigaction+400>:	jne    0x7ffff7ccc274 <__GI___libc_sigaction+468>

0x7ffff7ccc232: => 0x7ffff7ccc232 <__GI___libc_sigaction+402>:	mov    %r9d,%eax

0x7ffff7ccc235: => 0x7ffff7ccc235 <__GI___libc_sigaction+405>:	add    $0x148,%rsp

0x7ffff7ccc23c: => 0x7ffff7ccc23c <__GI___libc_sigaction+412>:	retq   

0x7ffff7f36764: => 0x7ffff7f36764 <std::rt::lang_start_internal+644>:	movb   $0x1,0x90285(%rip)        # 0x7ffff7fc69f0 <_ZN3std3sys3pal4unix14stack_overflow3imp13NEED_ALTSTACK17he859d1bf847dde3eE.0>

0x7ffff7f3676b: => 0x7ffff7f3676b <std::rt::lang_start_internal+651>:	lea    0x70(%rsp),%rdx

0x7ffff7f36770: => 0x7ffff7f36770 <std::rt::lang_start_internal+656>:	mov    $0x7,%edi

0x7ffff7f36775: => 0x7ffff7f36775 <std::rt::lang_start_internal+661>:	xor    %esi,%esi

0x7ffff7f36777: => 0x7ffff7f36777 <std::rt::lang_start_internal+663>:	callq  *0x8ebdb(%rip)        # 0x7ffff7fc5358

0x7ffff7ccc280: => 0x7ffff7ccc280 <__GI___sigaction>:	endbr64 

0x7ffff7ccc284: => 0x7ffff7ccc284 <__GI___sigaction+4>:	lea    -0x1(%rdi),%eax

0x7ffff7ccc287: => 0x7ffff7ccc287 <__GI___sigaction+7>:	cmp    $0x3f,%eax

0x7ffff7ccc28a: => 0x7ffff7ccc28a <__GI___sigaction+10>:	ja     0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc28c: => 0x7ffff7ccc28c <__GI___sigaction+12>:	lea    -0x20(%rdi),%eax

0x7ffff7ccc28f: => 0x7ffff7ccc28f <__GI___sigaction+15>:	cmp    $0x1,%eax

0x7ffff7ccc292: => 0x7ffff7ccc292 <__GI___sigaction+18>:	jbe    0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc294: => 0x7ffff7ccc294 <__GI___sigaction+20>:	jmpq   0x7ffff7ccc0a0 <__GI___libc_sigaction>

0x7ffff7ccc0a0: => 0x7ffff7ccc0a0 <__GI___libc_sigaction>:	endbr64 

0x7ffff7ccc0a4: => 0x7ffff7ccc0a4 <__GI___libc_sigaction+4>:	sub    $0x148,%rsp

0x7ffff7ccc0ab: => 0x7ffff7ccc0ab <__GI___libc_sigaction+11>:	mov    %rdx,%r8

0x7ffff7ccc0ae: => 0x7ffff7ccc0ae <__GI___libc_sigaction+14>:	mov    %fs:0x28,%rax

0x7ffff7ccc0b7: => 0x7ffff7ccc0b7 <__GI___libc_sigaction+23>:	mov    %rax,0x138(%rsp)

0x7ffff7ccc0bf: => 0x7ffff7ccc0bf <__GI___libc_sigaction+31>:	xor    %eax,%eax

0x7ffff7ccc0c1: => 0x7ffff7ccc0c1 <__GI___libc_sigaction+33>:	test   %rsi,%rsi

0x7ffff7ccc0c4: => 0x7ffff7ccc0c4 <__GI___libc_sigaction+36>:	je     0x7ffff7ccc240 <__GI___libc_sigaction+416>

0x7ffff7ccc240: => 0x7ffff7ccc240 <__GI___libc_sigaction+416>:	xor    %esi,%esi

0x7ffff7ccc242: => 0x7ffff7ccc242 <__GI___libc_sigaction+418>:	lea    0xa0(%rsp),%rdx

0x7ffff7ccc24a: => 0x7ffff7ccc24a <__GI___libc_sigaction+426>:	test   %r8,%r8

0x7ffff7ccc24d: => 0x7ffff7ccc24d <__GI___libc_sigaction+429>:	cmove  %rsi,%rdx

0x7ffff7ccc251: => 0x7ffff7ccc251 <__GI___libc_sigaction+433>:	jmpq   0x7ffff7ccc159 <__GI___libc_sigaction+185>

0x7ffff7ccc159: => 0x7ffff7ccc159 <__GI___libc_sigaction+185>:	mov    $0x8,%r10d

0x7ffff7ccc15f: => 0x7ffff7ccc15f <__GI___libc_sigaction+191>:	mov    $0xd,%eax

0x7ffff7ccc164: => 0x7ffff7ccc164 <__GI___libc_sigaction+196>:	syscall 

0x7ffff7ccc166: => 0x7ffff7ccc166 <__GI___libc_sigaction+198>:	cmp    $0xfffffffffffff000,%rax

0x7ffff7ccc16c: => 0x7ffff7ccc16c <__GI___libc_sigaction+204>:	ja     0x7ffff7ccc260 <__GI___libc_sigaction+448>

0x7ffff7ccc172: => 0x7ffff7ccc172 <__GI___libc_sigaction+210>:	mov    %eax,%r9d

0x7ffff7ccc175: => 0x7ffff7ccc175 <__GI___libc_sigaction+213>:	test   %r8,%r8

0x7ffff7ccc178: => 0x7ffff7ccc178 <__GI___libc_sigaction+216>:	je     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc17e: => 0x7ffff7ccc17e <__GI___libc_sigaction+222>:	test   %eax,%eax

0x7ffff7ccc180: => 0x7ffff7ccc180 <__GI___libc_sigaction+224>:	js     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc186: => 0x7ffff7ccc186 <__GI___libc_sigaction+230>:	mov    0xa0(%rsp),%rax

0x7ffff7ccc18e: => 0x7ffff7ccc18e <__GI___libc_sigaction+238>:	movdqu 0xb8(%rsp),%xmm0

0x7ffff7ccc197: => 0x7ffff7ccc197 <__GI___libc_sigaction+247>:	movdqu 0xc8(%rsp),%xmm1

0x7ffff7ccc1a0: => 0x7ffff7ccc1a0 <__GI___libc_sigaction+256>:	movdqu 0xd8(%rsp),%xmm2

0x7ffff7ccc1a9: => 0x7ffff7ccc1a9 <__GI___libc_sigaction+265>:	movdqu 0xe8(%rsp),%xmm3

0x7ffff7ccc1b2: => 0x7ffff7ccc1b2 <__GI___libc_sigaction+274>:	mov    %rax,(%r8)

0x7ffff7ccc1b5: => 0x7ffff7ccc1b5 <__GI___libc_sigaction+277>:	mov    0xa8(%rsp),%rax

0x7ffff7ccc1bd: => 0x7ffff7ccc1bd <__GI___libc_sigaction+285>:	movups %xmm0,0x8(%r8)

0x7ffff7ccc1c2: => 0x7ffff7ccc1c2 <__GI___libc_sigaction+290>:	movdqu 0xf8(%rsp),%xmm4

0x7ffff7ccc1cb: => 0x7ffff7ccc1cb <__GI___libc_sigaction+299>:	movdqu 0x108(%rsp),%xmm5

0x7ffff7ccc1d4: => 0x7ffff7ccc1d4 <__GI___libc_sigaction+308>:	movups %xmm1,0x18(%r8)

0x7ffff7ccc1d9: => 0x7ffff7ccc1d9 <__GI___libc_sigaction+313>:	movdqu 0x118(%rsp),%xmm6

0x7ffff7ccc1e2: => 0x7ffff7ccc1e2 <__GI___libc_sigaction+322>:	movdqu 0x128(%rsp),%xmm7

0x7ffff7ccc1eb: => 0x7ffff7ccc1eb <__GI___libc_sigaction+331>:	mov    %eax,0x88(%r8)

0x7ffff7ccc1f2: => 0x7ffff7ccc1f2 <__GI___libc_sigaction+338>:	mov    0xb0(%rsp),%rax

0x7ffff7ccc1fa: => 0x7ffff7ccc1fa <__GI___libc_sigaction+346>:	movups %xmm2,0x28(%r8)

0x7ffff7ccc1ff: => 0x7ffff7ccc1ff <__GI___libc_sigaction+351>:	movups %xmm3,0x38(%r8)

0x7ffff7ccc204: => 0x7ffff7ccc204 <__GI___libc_sigaction+356>:	mov    %rax,0x90(%r8)

0x7ffff7ccc20b: => 0x7ffff7ccc20b <__GI___libc_sigaction+363>:	movups %xmm4,0x48(%r8)

0x7ffff7ccc210: => 0x7ffff7ccc210 <__GI___libc_sigaction+368>:	movups %xmm5,0x58(%r8)

0x7ffff7ccc215: => 0x7ffff7ccc215 <__GI___libc_sigaction+373>:	movups %xmm6,0x68(%r8)

0x7ffff7ccc21a: => 0x7ffff7ccc21a <__GI___libc_sigaction+378>:	movups %xmm7,0x78(%r8)

0x7ffff7ccc21f: => 0x7ffff7ccc21f <__GI___libc_sigaction+383>:	mov    0x138(%rsp),%rax

0x7ffff7ccc227: => 0x7ffff7ccc227 <__GI___libc_sigaction+391>:	xor    %fs:0x28,%rax

0x7ffff7ccc230: => 0x7ffff7ccc230 <__GI___libc_sigaction+400>:	jne    0x7ffff7ccc274 <__GI___libc_sigaction+468>

0x7ffff7ccc232: => 0x7ffff7ccc232 <__GI___libc_sigaction+402>:	mov    %r9d,%eax

0x7ffff7ccc235: => 0x7ffff7ccc235 <__GI___libc_sigaction+405>:	add    $0x148,%rsp

0x7ffff7ccc23c: => 0x7ffff7ccc23c <__GI___libc_sigaction+412>:	retq   

0x7ffff7f3677d: => 0x7ffff7f3677d <std::rt::lang_start_internal+669>:	cmpq   $0x0,0x70(%rsp)

0x7ffff7f36783: => 0x7ffff7f36783 <std::rt::lang_start_internal+675>:	jne    0x7ffff7f367b5 <std::rt::lang_start_internal+725>

0x7ffff7f36785: => 0x7ffff7f36785 <std::rt::lang_start_internal+677>:	movl   $0x8000004,0xf8(%rsp)

0x7ffff7f36790: => 0x7ffff7f36790 <std::rt::lang_start_internal+688>:	lea    0x28489(%rip),%rax        # 0x7ffff7f5ec20 <std::sys::pal::unix::stack_overflow::imp::signal_handler>

0x7ffff7f36797: => 0x7ffff7f36797 <std::rt::lang_start_internal+695>:	mov    %rax,0x70(%rsp)

0x7ffff7f3679c: => 0x7ffff7f3679c <std::rt::lang_start_internal+700>:	lea    0x70(%rsp),%rsi

0x7ffff7f367a1: => 0x7ffff7f367a1 <std::rt::lang_start_internal+705>:	mov    $0x7,%edi

0x7ffff7f367a6: => 0x7ffff7f367a6 <std::rt::lang_start_internal+710>:	xor    %edx,%edx

0x7ffff7f367a8: => 0x7ffff7f367a8 <std::rt::lang_start_internal+712>:	callq  *0x8ebaa(%rip)        # 0x7ffff7fc5358

0x7ffff7ccc280: => 0x7ffff7ccc280 <__GI___sigaction>:	endbr64 

0x7ffff7ccc284: => 0x7ffff7ccc284 <__GI___sigaction+4>:	lea    -0x1(%rdi),%eax

0x7ffff7ccc287: => 0x7ffff7ccc287 <__GI___sigaction+7>:	cmp    $0x3f,%eax

0x7ffff7ccc28a: => 0x7ffff7ccc28a <__GI___sigaction+10>:	ja     0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc28c: => 0x7ffff7ccc28c <__GI___sigaction+12>:	lea    -0x20(%rdi),%eax

0x7ffff7ccc28f: => 0x7ffff7ccc28f <__GI___sigaction+15>:	cmp    $0x1,%eax

0x7ffff7ccc292: => 0x7ffff7ccc292 <__GI___sigaction+18>:	jbe    0x7ffff7ccc2a0 <__GI___sigaction+32>

0x7ffff7ccc294: => 0x7ffff7ccc294 <__GI___sigaction+20>:	jmpq   0x7ffff7ccc0a0 <__GI___libc_sigaction>

0x7ffff7ccc0a0: => 0x7ffff7ccc0a0 <__GI___libc_sigaction>:	endbr64 

0x7ffff7ccc0a4: => 0x7ffff7ccc0a4 <__GI___libc_sigaction+4>:	sub    $0x148,%rsp

0x7ffff7ccc0ab: => 0x7ffff7ccc0ab <__GI___libc_sigaction+11>:	mov    %rdx,%r8

0x7ffff7ccc0ae: => 0x7ffff7ccc0ae <__GI___libc_sigaction+14>:	mov    %fs:0x28,%rax

0x7ffff7ccc0b7: => 0x7ffff7ccc0b7 <__GI___libc_sigaction+23>:	mov    %rax,0x138(%rsp)

0x7ffff7ccc0bf: => 0x7ffff7ccc0bf <__GI___libc_sigaction+31>:	xor    %eax,%eax

0x7ffff7ccc0c1: => 0x7ffff7ccc0c1 <__GI___libc_sigaction+33>:	test   %rsi,%rsi

0x7ffff7ccc0c4: => 0x7ffff7ccc0c4 <__GI___libc_sigaction+36>:	je     0x7ffff7ccc240 <__GI___libc_sigaction+416>

0x7ffff7ccc0ca: => 0x7ffff7ccc0ca <__GI___libc_sigaction+42>:	mov    (%rsi),%rax

0x7ffff7ccc0cd: => 0x7ffff7ccc0cd <__GI___libc_sigaction+45>:	movdqu 0x8(%rsi),%xmm0

0x7ffff7ccc0d2: => 0x7ffff7ccc0d2 <__GI___libc_sigaction+50>:	lea    0xa0(%rsp),%rdx

0x7ffff7ccc0da: => 0x7ffff7ccc0da <__GI___libc_sigaction+58>:	movdqu 0x18(%rsi),%xmm1

0x7ffff7ccc0df: => 0x7ffff7ccc0df <__GI___libc_sigaction+63>:	movdqu 0x28(%rsi),%xmm2

0x7ffff7ccc0e4: => 0x7ffff7ccc0e4 <__GI___libc_sigaction+68>:	movdqu 0x38(%rsi),%xmm3

0x7ffff7ccc0e9: => 0x7ffff7ccc0e9 <__GI___libc_sigaction+73>:	movdqu 0x48(%rsi),%xmm4

0x7ffff7ccc0ee: => 0x7ffff7ccc0ee <__GI___libc_sigaction+78>:	mov    %rax,(%rsp)

0x7ffff7ccc0f2: => 0x7ffff7ccc0f2 <__GI___libc_sigaction+82>:	mov    0x88(%rsi),%eax

0x7ffff7ccc0f8: => 0x7ffff7ccc0f8 <__GI___libc_sigaction+88>:	movdqu 0x58(%rsi),%xmm5

0x7ffff7ccc0fd: => 0x7ffff7ccc0fd <__GI___libc_sigaction+93>:	movups %xmm0,0x18(%rsp)

0x7ffff7ccc102: => 0x7ffff7ccc102 <__GI___libc_sigaction+98>:	movdqu 0x68(%rsi),%xmm6

0x7ffff7ccc107: => 0x7ffff7ccc107 <__GI___libc_sigaction+103>:	movdqu 0x78(%rsi),%xmm7

0x7ffff7ccc10c: => 0x7ffff7ccc10c <__GI___libc_sigaction+108>:	movups %xmm1,0x28(%rsp)

0x7ffff7ccc111: => 0x7ffff7ccc111 <__GI___libc_sigaction+113>:	mov    %rsp,%rsi

0x7ffff7ccc114: => 0x7ffff7ccc114 <__GI___libc_sigaction+116>:	or     $0x4000000,%eax

0x7ffff7ccc119: => 0x7ffff7ccc119 <__GI___libc_sigaction+121>:	test   %r8,%r8

0x7ffff7ccc11c: => 0x7ffff7ccc11c <__GI___libc_sigaction+124>:	movups %xmm2,0x38(%rsp)

0x7ffff7ccc121: => 0x7ffff7ccc121 <__GI___libc_sigaction+129>:	cltq   

0x7ffff7ccc123: => 0x7ffff7ccc123 <__GI___libc_sigaction+131>:	movups %xmm3,0x48(%rsp)

0x7ffff7ccc128: => 0x7ffff7ccc128 <__GI___libc_sigaction+136>:	mov    %rax,0x8(%rsp)

0x7ffff7ccc12d: => 0x7ffff7ccc12d <__GI___libc_sigaction+141>:	lea    -0xa4(%rip),%rax        # 0x7ffff7ccc090 <__restore_rt>

0x7ffff7ccc134: => 0x7ffff7ccc134 <__GI___libc_sigaction+148>:	mov    %rax,0x10(%rsp)

0x7ffff7ccc139: => 0x7ffff7ccc139 <__GI___libc_sigaction+153>:	mov    $0x0,%eax

0x7ffff7ccc13e: => 0x7ffff7ccc13e <__GI___libc_sigaction+158>:	cmove  %rax,%rdx

0x7ffff7ccc142: => 0x7ffff7ccc142 <__GI___libc_sigaction+162>:	movups %xmm4,0x58(%rsp)

0x7ffff7ccc147: => 0x7ffff7ccc147 <__GI___libc_sigaction+167>:	movups %xmm5,0x68(%rsp)

0x7ffff7ccc14c: => 0x7ffff7ccc14c <__GI___libc_sigaction+172>:	movups %xmm6,0x78(%rsp)

0x7ffff7ccc151: => 0x7ffff7ccc151 <__GI___libc_sigaction+177>:	movups %xmm7,0x88(%rsp)

0x7ffff7ccc159: => 0x7ffff7ccc159 <__GI___libc_sigaction+185>:	mov    $0x8,%r10d

0x7ffff7ccc15f: => 0x7ffff7ccc15f <__GI___libc_sigaction+191>:	mov    $0xd,%eax

0x7ffff7ccc164: => 0x7ffff7ccc164 <__GI___libc_sigaction+196>:	syscall 

0x7ffff7ccc166: => 0x7ffff7ccc166 <__GI___libc_sigaction+198>:	cmp    $0xfffffffffffff000,%rax

0x7ffff7ccc16c: => 0x7ffff7ccc16c <__GI___libc_sigaction+204>:	ja     0x7ffff7ccc260 <__GI___libc_sigaction+448>

0x7ffff7ccc172: => 0x7ffff7ccc172 <__GI___libc_sigaction+210>:	mov    %eax,%r9d

0x7ffff7ccc175: => 0x7ffff7ccc175 <__GI___libc_sigaction+213>:	test   %r8,%r8

0x7ffff7ccc178: => 0x7ffff7ccc178 <__GI___libc_sigaction+216>:	je     0x7ffff7ccc21f <__GI___libc_sigaction+383>

0x7ffff7ccc21f: => 0x7ffff7ccc21f <__GI___libc_sigaction+383>:	mov    0x138(%rsp),%rax

0x7ffff7ccc227: => 0x7ffff7ccc227 <__GI___libc_sigaction+391>:	xor    %fs:0x28,%rax

0x7ffff7ccc230: => 0x7ffff7ccc230 <__GI___libc_sigaction+400>:	jne    0x7ffff7ccc274 <__GI___libc_sigaction+468>

0x7ffff7ccc232: => 0x7ffff7ccc232 <__GI___libc_sigaction+402>:	mov    %r9d,%eax

0x7ffff7ccc235: => 0x7ffff7ccc235 <__GI___libc_sigaction+405>:	add    $0x148,%rsp

0x7ffff7ccc23c: => 0x7ffff7ccc23c <__GI___libc_sigaction+412>:	retq   

0x7ffff7f367ae: => 0x7ffff7f367ae <std::rt::lang_start_internal+718>:	movb   $0x1,0x9023b(%rip)        # 0x7ffff7fc69f0 <_ZN3std3sys3pal4unix14stack_overflow3imp13NEED_ALTSTACK17he859d1bf847dde3eE.0>

0x7ffff7f367b5: => 0x7ffff7f367b5 <std::rt::lang_start_internal+725>:	callq  0x7ffff7f5eeb0 <std::sys::pal::unix::stack_overflow::imp::make_handler>

0x7ffff7f5eeb0: => 0x7ffff7f5eeb0 <std::sys::pal::unix::stack_overflow::imp::make_handler>:	push   %rbx

0x7ffff7f5eeb1: => 0x7ffff7f5eeb1 <std::sys::pal::unix::stack_overflow::imp::make_handler+1>:	sub    $0x70,%rsp

0x7ffff7f5eeb5: => 0x7ffff7f5eeb5 <std::sys::pal::unix::stack_overflow::imp::make_handler+5>:	movzbl 0x67b34(%rip),%eax        # 0x7ffff7fc69f0 <_ZN3std3sys3pal4unix14stack_overflow3imp13NEED_ALTSTACK17he859d1bf847dde3eE.0>

0x7ffff7f5eebc: => 0x7ffff7f5eebc <std::sys::pal::unix::stack_overflow::imp::make_handler+12>:	test   %al,%al

0x7ffff7f5eebe: => 0x7ffff7f5eebe <std::sys::pal::unix::stack_overflow::imp::make_handler+14>:	je     0x7ffff7f5ef85 <std::sys::pal::unix::stack_overflow::imp::make_handler+213>

0x7ffff7f5eec4: => 0x7ffff7f5eec4 <std::sys::pal::unix::stack_overflow::imp::make_handler+20>:	xorps  %xmm0,%xmm0

0x7ffff7f5eec7: => 0x7ffff7f5eec7 <std::sys::pal::unix::stack_overflow::imp::make_handler+23>:	movaps %xmm0,0x10(%rsp)

0x7ffff7f5eecc: => 0x7ffff7f5eecc <std::sys::pal::unix::stack_overflow::imp::make_handler+28>:	movq   $0x0,0x20(%rsp)

0x7ffff7f5eed5: => 0x7ffff7f5eed5 <std::sys::pal::unix::stack_overflow::imp::make_handler+37>:	xor    %ebx,%ebx

0x7ffff7f5eed7: => 0x7ffff7f5eed7 <std::sys::pal::unix::stack_overflow::imp::make_handler+39>:	lea    0x10(%rsp),%rsi

0x7ffff7f5eedc: => 0x7ffff7f5eedc <std::sys::pal::unix::stack_overflow::imp::make_handler+44>:	xor    %edi,%edi

0x7ffff7f5eede: => 0x7ffff7f5eede <std::sys::pal::unix::stack_overflow::imp::make_handler+46>:	callq  *0x667b4(%rip)        # 0x7ffff7fc5698

0x7ffff7ccc9c0: => 0x7ffff7ccc9c0 <sigaltstack>:	endbr64 

0x7ffff7ccc9c4: => 0x7ffff7ccc9c4 <sigaltstack+4>:	mov    $0x83,%eax

0x7ffff7ccc9c9: => 0x7ffff7ccc9c9 <sigaltstack+9>:	syscall 

0x7ffff7ccc9cb: => 0x7ffff7ccc9cb <sigaltstack+11>:	cmp    $0xfffffffffffff001,%rax

0x7ffff7ccc9d1: => 0x7ffff7ccc9d1 <sigaltstack+17>:	jae    0x7ffff7ccc9d4 <sigaltstack+20>

0x7ffff7ccc9d3: => 0x7ffff7ccc9d3 <sigaltstack+19>:	retq   

0x7ffff7f5eee4: => 0x7ffff7f5eee4 <std::sys::pal::unix::stack_overflow::imp::make_handler+52>:	testb  $0x2,0x18(%rsp)

0x7ffff7f5eee9: => 0x7ffff7f5eee9 <std::sys::pal::unix::stack_overflow::imp::make_handler+57>:	je     0x7ffff7f5ef7c <std::sys::pal::unix::stack_overflow::imp::make_handler+204>

0x7ffff7f5eeef: => 0x7ffff7f5eeef <std::sys::pal::unix::stack_overflow::imp::make_handler+63>:	mov    $0x1e,%edi

0x7ffff7f5eef4: => 0x7ffff7f5eef4 <std::sys::pal::unix::stack_overflow::imp::make_handler+68>:	callq  *0x66466(%rip)        # 0x7ffff7fc5360

0x7ffff7f5eefa: => 0x7ffff7f5eefa <std::sys::pal::unix::stack_overflow::imp::make_handler+74>:	lea    0x2000(%rax),%rsi

0x7ffff7f5ef01: => 0x7ffff7f5ef01 <std::sys::pal::unix::stack_overflow::imp::make_handler+81>:	xor    %edi,%edi

0x7ffff7f5ef03: => 0x7ffff7f5ef03 <std::sys::pal::unix::stack_overflow::imp::make_handler+83>:	mov    $0x3,%edx

0x7ffff7f5ef08: => 0x7ffff7f5ef08 <std::sys::pal::unix::stack_overflow::imp::make_handler+88>:	mov    $0x20022,%ecx

0x7ffff7f5ef0d: => 0x7ffff7f5ef0d <std::sys::pal::unix::stack_overflow::imp::make_handler+93>:	mov    $0xffffffff,%r8d

0x7ffff7f5ef13: => 0x7ffff7f5ef13 <std::sys::pal::unix::stack_overflow::imp::make_handler+99>:	xor    %r9d,%r9d

0x7ffff7f5ef16: => 0x7ffff7f5ef16 <std::sys::pal::unix::stack_overflow::imp::make_handler+102>:	callq  *0x66784(%rip)        # 0x7ffff7fc56a0

0x7ffff7f5ef1c: => 0x7ffff7f5ef1c <std::sys::pal::unix::stack_overflow::imp::make_handler+108>:	cmp    $0xffffffffffffffff,%rax

0x7ffff7f5ef20: => 0x7ffff7f5ef20 <std::sys::pal::unix::stack_overflow::imp::make_handler+112>:	je     0x7ffff7f5ef90 <std::sys::pal::unix::stack_overflow::imp::make_handler+224>

0x7ffff7f5ef22: => 0x7ffff7f5ef22 <std::sys::pal::unix::stack_overflow::imp::make_handler+114>:	mov    %rax,%rbx

0x7ffff7f5ef25: => 0x7ffff7f5ef25 <std::sys::pal::unix::stack_overflow::imp::make_handler+117>:	mov    $0x1e,%edi

0x7ffff7f5ef2a: => 0x7ffff7f5ef2a <std::sys::pal::unix::stack_overflow::imp::make_handler+122>:	callq  *0x66430(%rip)        # 0x7ffff7fc5360

0x7ffff7f5ef30: => 0x7ffff7f5ef30 <std::sys::pal::unix::stack_overflow::imp::make_handler+128>:	mov    %rbx,%rdi

0x7ffff7f5ef33: => 0x7ffff7f5ef33 <std::sys::pal::unix::stack_overflow::imp::make_handler+131>:	mov    %rax,%rsi

0x7ffff7f5ef36: => 0x7ffff7f5ef36 <std::sys::pal::unix::stack_overflow::imp::make_handler+134>:	xor    %edx,%edx

0x7ffff7f5ef38: => 0x7ffff7f5ef38 <std::sys::pal::unix::stack_overflow::imp::make_handler+136>:	callq  *0x6676a(%rip)        # 0x7ffff7fc56a8

0x7ffff7f5ef3e: => 0x7ffff7f5ef3e <std::sys::pal::unix::stack_overflow::imp::make_handler+142>:	test   %eax,%eax

0x7ffff7f5ef40: => 0x7ffff7f5ef40 <std::sys::pal::unix::stack_overflow::imp::make_handler+144>:	jne    0x7ffff7f5f000 <std::sys::pal::unix::stack_overflow::imp::make_handler+336>

0x7ffff7f5ef46: => 0x7ffff7f5ef46 <std::sys::pal::unix::stack_overflow::imp::make_handler+150>:	mov    $0x1e,%edi

0x7ffff7f5ef4b: => 0x7ffff7f5ef4b <std::sys::pal::unix::stack_overflow::imp::make_handler+155>:	callq  *0x6640f(%rip)        # 0x7ffff7fc5360

0x7ffff7f5ef51: => 0x7ffff7f5ef51 <std::sys::pal::unix::stack_overflow::imp::make_handler+161>:	add    %rax,%rbx

0x7ffff7f5ef54: => 0x7ffff7f5ef54 <std::sys::pal::unix::stack_overflow::imp::make_handler+164>:	mov    %rbx,0x10(%rsp)

0x7ffff7f5ef59: => 0x7ffff7f5ef59 <std::sys::pal::unix::stack_overflow::imp::make_handler+169>:	movl   $0x0,0x18(%rsp)

0x7ffff7f5ef61: => 0x7ffff7f5ef61 <std::sys::pal::unix::stack_overflow::imp::make_handler+177>:	movq   $0x2000,0x20(%rsp)

0x7ffff7f5ef6a: => 0x7ffff7f5ef6a <std::sys::pal::unix::stack_overflow::imp::make_handler+186>:	lea    0x10(%rsp),%rdi

0x7ffff7f5ef6f: => 0x7ffff7f5ef6f <std::sys::pal::unix::stack_overflow::imp::make_handler+191>:	xor    %esi,%esi

0x7ffff7f5ef71: => 0x7ffff7f5ef71 <std::sys::pal::unix::stack_overflow::imp::make_handler+193>:	callq  *0x66721(%rip)        # 0x7ffff7fc5698

0x7ffff7f5ef77: => 0x7ffff7f5ef77 <std::sys::pal::unix::stack_overflow::imp::make_handler+199>:	mov    0x10(%rsp),%rbx

0x7ffff7f5ef7c: => 0x7ffff7f5ef7c <std::sys::pal::unix::stack_overflow::imp::make_handler+204>:	mov    %rbx,%rax

0x7ffff7f5ef7f: => 0x7ffff7f5ef7f <std::sys::pal::unix::stack_overflow::imp::make_handler+207>:	add    $0x70,%rsp

0x7ffff7f5ef83: => 0x7ffff7f5ef83 <std::sys::pal::unix::stack_overflow::imp::make_handler+211>:	pop    %rbx

0x7ffff7f5ef84: => 0x7ffff7f5ef84 <std::sys::pal::unix::stack_overflow::imp::make_handler+212>:	retq   

0x7ffff7f367ba: => 0x7ffff7f367ba <std::rt::lang_start_internal+730>:	mov    %rax,0x90227(%rip)        # 0x7ffff7fc69e8 <_ZN3std3sys3pal4unix14stack_overflow3imp13MAIN_ALTSTACK17hc84a29a28cecdde3E.0>

0x7ffff7f367c1: => 0x7ffff7f367c1 <std::rt::lang_start_internal+737>:	mov    $0x1e,%edi

0x7ffff7f367c6: => 0x7ffff7f367c6 <std::rt::lang_start_internal+742>:	callq  *0x8eb94(%rip)        # 0x7ffff7fc5360

0x7ffff7f367cc: => 0x7ffff7f367cc <std::rt::lang_start_internal+748>:	mov    %rax,0x90225(%rip)        # 0x7ffff7fc69f8 <_ZN3std3sys3pal4unix6thread5guard9PAGE_SIZE17hb93bfb89caf494ffE.0>

0x7ffff7f367d3: => 0x7ffff7f367d3 <std::rt::lang_start_internal+755>:	mov    0x9021e(%rip),%rbp        # 0x7ffff7fc69f8 <_ZN3std3sys3pal4unix6thread5guard9PAGE_SIZE17hb93bfb89caf494ffE.0>

0x7ffff7f367da: => 0x7ffff7f367da <std::rt::lang_start_internal+762>:	test   %rbp,%rbp

0x7ffff7f367dd: => 0x7ffff7f367dd <std::rt::lang_start_internal+765>:	je     0x7ffff7f3694e <std::rt::lang_start_internal+1134>

0x7ffff7f367e3: => 0x7ffff7f367e3 <std::rt::lang_start_internal+771>:	mov    %rax,%r15

0x7ffff7f367e6: => 0x7ffff7f367e6 <std::rt::lang_start_internal+774>:	xorps  %xmm0,%xmm0

0x7ffff7f367e9: => 0x7ffff7f367e9 <std::rt::lang_start_internal+777>:	movaps %xmm0,0x90(%rsp)

0x7ffff7f367f1: => 0x7ffff7f367f1 <std::rt::lang_start_internal+785>:	movaps %xmm0,0x80(%rsp)

0x7ffff7f367f9: => 0x7ffff7f367f9 <std::rt::lang_start_internal+793>:	movaps %xmm0,0x70(%rsp)

0x7ffff7f367fe: => 0x7ffff7f367fe <std::rt::lang_start_internal+798>:	movq   $0x0,0xa0(%rsp)

0x7ffff7f3680a: => 0x7ffff7f3680a <std::rt::lang_start_internal+810>:	callq  *0x8eb58(%rip)        # 0x7ffff7fc5368

0x7ffff7f36810: => 0x7ffff7f36810 <std::rt::lang_start_internal+816>:	lea    0x70(%rsp),%rsi

0x7ffff7f36815: => 0x7ffff7f36815 <std::rt::lang_start_internal+821>:	mov    %rax,%rdi

0x7ffff7f36818: => 0x7ffff7f36818 <std::rt::lang_start_internal+824>:	callq  *0x8eb52(%rip)        # 0x7ffff7fc5370

0x7ffff7f3681e: => 0x7ffff7f3681e <std::rt::lang_start_internal+830>:	test   %eax,%eax

0x7ffff7f36820: => 0x7ffff7f36820 <std::rt::lang_start_internal+832>:	je     0x7ffff7f36829 <std::rt::lang_start_internal+841>

0x7ffff7f36829: => 0x7ffff7f36829 <std::rt::lang_start_internal+841>:	movq   $0x0,0x8(%rsp)

0x7ffff7f36832: => 0x7ffff7f36832 <std::rt::lang_start_internal+850>:	movq   $0x0,0x48(%rsp)

0x7ffff7f3683b: => 0x7ffff7f3683b <std::rt::lang_start_internal+859>:	lea    0x70(%rsp),%rdi

0x7ffff7f36840: => 0x7ffff7f36840 <std::rt::lang_start_internal+864>:	lea    0x8(%rsp),%rsi

0x7ffff7f36845: => 0x7ffff7f36845 <std::rt::lang_start_internal+869>:	lea    0x48(%rsp),%r13

0x7ffff7f3684a: => 0x7ffff7f3684a <std::rt::lang_start_internal+874>:	mov    %r13,%rdx

0x7ffff7f3684d: => 0x7ffff7f3684d <std::rt::lang_start_internal+877>:	callq  *0x8eb25(%rip)        # 0x7ffff7fc5378

0x7ffff7f36853: => 0x7ffff7f36853 <std::rt::lang_start_internal+883>:	mov    %eax,0x60(%rsp)

0x7ffff7f36857: => 0x7ffff7f36857 <std::rt::lang_start_internal+887>:	test   %eax,%eax

0x7ffff7f36859: => 0x7ffff7f36859 <std::rt::lang_start_internal+889>:	jne    0x7ffff7f36a8f <std::rt::lang_start_internal+1455>

0x7ffff7f3685f: => 0x7ffff7f3685f <std::rt::lang_start_internal+895>:	mov    0x8(%rsp),%r12

0x7ffff7f36864: => 0x7ffff7f36864 <std::rt::lang_start_internal+900>:	lea    0x70(%rsp),%rdi

0x7ffff7f36869: => 0x7ffff7f36869 <std::rt::lang_start_internal+905>:	callq  *0x8eb11(%rip)        # 0x7ffff7fc5380

0x7ffff7f3686f: => 0x7ffff7f3686f <std::rt::lang_start_internal+911>:	mov    %eax,0x48(%rsp)

0x7ffff7f36873: => 0x7ffff7f36873 <std::rt::lang_start_internal+915>:	test   %eax,%eax

0x7ffff7f36875: => 0x7ffff7f36875 <std::rt::lang_start_internal+917>:	jne    0x7ffff7f36aab <std::rt::lang_start_internal+1483>

0x7ffff7f3687b: => 0x7ffff7f3687b <std::rt::lang_start_internal+923>:	mov    %r12,%rax

0x7ffff7f3687e: => 0x7ffff7f3687e <std::rt::lang_start_internal+926>:	or     %rbp,%rax

0x7ffff7f36881: => 0x7ffff7f36881 <std::rt::lang_start_internal+929>:	shr    $0x20,%rax

0x7ffff7f36885: => 0x7ffff7f36885 <std::rt::lang_start_internal+933>:	je     0x7ffff7f36891 <std::rt::lang_start_internal+945>

0x7ffff7f36887: => 0x7ffff7f36887 <std::rt::lang_start_internal+935>:	mov    %r12,%rax

0x7ffff7f3688a: => 0x7ffff7f3688a <std::rt::lang_start_internal+938>:	xor    %edx,%edx

0x7ffff7f3688c: => 0x7ffff7f3688c <std::rt::lang_start_internal+940>:	div    %rbp

0x7ffff7f3688f: => 0x7ffff7f3688f <std::rt::lang_start_internal+943>:	jmp    0x7ffff7f36898 <std::rt::lang_start_internal+952>

0x7ffff7f36898: => 0x7ffff7f36898 <std::rt::lang_start_internal+952>:	sub    %rdx,%rbp

0x7ffff7f3689b: => 0x7ffff7f3689b <std::rt::lang_start_internal+955>:	test   %rdx,%rdx

0x7ffff7f3689e: => 0x7ffff7f3689e <std::rt::lang_start_internal+958>:	cmove  %rdx,%rbp

0x7ffff7f368a2: => 0x7ffff7f368a2 <std::rt::lang_start_internal+962>:	add    %rbp,%r12

0x7ffff7f368a5: => 0x7ffff7f368a5 <std::rt::lang_start_internal+965>:	mov    %r12,%rax

0x7ffff7f368a8: => 0x7ffff7f368a8 <std::rt::lang_start_internal+968>:	sub    %r15,%rax

0x7ffff7f368ab: => 0x7ffff7f368ab <std::rt::lang_start_internal+971>:	mov    %rax,0x50(%rsp)

0x7ffff7f368b0: => 0x7ffff7f368b0 <std::rt::lang_start_internal+976>:	mov    %r12,0x58(%rsp)

0x7ffff7f368b5: => 0x7ffff7f368b5 <std::rt::lang_start_internal+981>:	mov    $0x1,%eax

0x7ffff7f368ba: => 0x7ffff7f368ba <std::rt::lang_start_internal+986>:	mov    %rax,0x48(%rsp)

0x7ffff7f368bf: => 0x7ffff7f368bf <std::rt::lang_start_internal+991>:	lea    -0x556aa(%rip),%rsi        # 0x7ffff7ee121c

0x7ffff7f368c6: => 0x7ffff7f368c6 <std::rt::lang_start_internal+998>:	lea    0x18(%rsp),%r15

0x7ffff7f368cb: => 0x7ffff7f368cb <std::rt::lang_start_internal+1003>:	mov    $0x4,%edx

0x7ffff7f368d0: => 0x7ffff7f368d0 <std::rt::lang_start_internal+1008>:	mov    %r15,%rdi

0x7ffff7f368d3: => 0x7ffff7f368d3 <std::rt::lang_start_internal+1011>:	callq  *0x8e907(%rip)        # 0x7ffff7fc51e0

0x7ffff7f368d9: => 0x7ffff7f368d9 <std::rt::lang_start_internal+1017>:	movabs $0x8000000000000000,%r12

0x7ffff7f368e3: => 0x7ffff7f368e3 <std::rt::lang_start_internal+1027>:	mov    0x18(%rsp),%r13

0x7ffff7f368e8: => 0x7ffff7f368e8 <std::rt::lang_start_internal+1032>:	cmp    %r12,%r13

0x7ffff7f368eb: => 0x7ffff7f368eb <std::rt::lang_start_internal+1035>:	jne    0x7ffff7f36966 <std::rt::lang_start_internal+1158>

0x7ffff7f368ed: => 0x7ffff7f368ed <std::rt::lang_start_internal+1037>:	mov    0x20(%rsp),%rdi

0x7ffff7f368f2: => 0x7ffff7f368f2 <std::rt::lang_start_internal+1042>:	mov    0x28(%rsp),%rsi

0x7ffff7f368f7: => 0x7ffff7f368f7 <std::rt::lang_start_internal+1047>:	callq  *0x8e193(%rip)        # 0x7ffff7fc4a90

0x7ffff7f368fd: => 0x7ffff7f368fd <std::rt::lang_start_internal+1053>:	lea    0x48(%rsp),%rdi

0x7ffff7f36902: => 0x7ffff7f36902 <std::rt::lang_start_internal+1058>:	mov    %rax,%rsi

0x7ffff7f36905: => 0x7ffff7f36905 <std::rt::lang_start_internal+1061>:	callq  *0x8e065(%rip)        # 0x7ffff7fc4970

0x7ffff7f3690b: => 0x7ffff7f3690b <std::rt::lang_start_internal+1067>:	mov    %r14,%rdi

0x7ffff7f3690e: => 0x7ffff7f3690e <std::rt::lang_start_internal+1070>:	callq  *0x28(%rbx)

0x7ffff7f36911: => 0x7ffff7f36911 <std::rt::lang_start_internal+1073>:	movslq %eax,%r14

0x7ffff7f36914: => 0x7ffff7f36914 <std::rt::lang_start_internal+1076>:	mov    0x8ffba(%rip),%eax        # 0x7ffff7fc68d4 <_ZN3std2rt7cleanup7CLEANUP17h2220258659f3f514E>

0x7ffff7f3691a: => 0x7ffff7f3691a <std::rt::lang_start_internal+1082>:	cmp    $0x4,%eax

0x7ffff7f3691d: => 0x7ffff7f3691d <std::rt::lang_start_internal+1085>:	je     0x7ffff7f36933 <std::rt::lang_start_internal+1107>

0x7ffff7f3691f: => 0x7ffff7f3691f <std::rt::lang_start_internal+1087>:	movb   $0x1,0x18(%rsp)

0x7ffff7f36924: => 0x7ffff7f36924 <std::rt::lang_start_internal+1092>:	mov    %r15,0x70(%rsp)

0x7ffff7f36929: => 0x7ffff7f36929 <std::rt::lang_start_internal+1097>:	lea    0x70(%rsp),%rdi

0x7ffff7f3692e: => 0x7ffff7f3692e <std::rt::lang_start_internal+1102>:	callq  0x7ffff7f63fd0 <std::sys_common::once::futex::Once::call>

0x7ffff7f36933: => 0x7ffff7f36933 <std::rt::lang_start_internal+1107>:	mov    %r14,%rax

0x7ffff7f36936: => 0x7ffff7f36936 <std::rt::lang_start_internal+1110>:	add    $0x118,%rsp

0x7ffff7f3693d: => 0x7ffff7f3693d <std::rt::lang_start_internal+1117>:	pop    %rbx

0x7ffff7f3693e: => 0x7ffff7f3693e <std::rt::lang_start_internal+1118>:	pop    %r12

0x7ffff7f36940: => 0x7ffff7f36940 <std::rt::lang_start_internal+1120>:	pop    %r13

0x7ffff7f36942: => 0x7ffff7f36942 <std::rt::lang_start_internal+1122>:	pop    %r14

0x7ffff7f36944: => 0x7ffff7f36944 <std::rt::lang_start_internal+1124>:	pop    %r15

0x7ffff7f36946: => 0x7ffff7f36946 <std::rt::lang_start_internal+1126>:	pop    %rbp

0x7ffff7f36947: => 0x7ffff7f36947 <std::rt::lang_start_internal+1127>:	retq   

0x402b37: => 0x402b37 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+39>:	mov    %rax,0x8(%rsp)

0x402b3c: => 0x402b3c <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+44>:	mov    0x8(%rsp),%rax

0x402b41: => 0x402b41 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+49>:	add    $0x18,%rsp

0x402b45: => 0x402b45 <_ZN3std2rt10lang_start17hf4c32f718ccefd9fE+53>:	retq   

0x405965: => 0x405965 <main+21>:	pop    %rcx

0x405966: => 0x405966 <main+22>:	retq   

0x7ffff7cad083: => 0x7ffff7cad083 <__libc_start_main+243>:	mov    %eax,%edi

0x7ffff7cad085: => 0x7ffff7cad085 <__libc_start_main+245>:	callq  0x7ffff7ccfa40 <__GI_exit>

