import{_ as s,c as a,a as t,o as p}from"./app-BvkodVSL.js";const e={};function o(l,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="software" tabindex="-1"><a class="header-anchor" href="#software"><span>Software</span></a></h1><h2 id="how-to-use-the-tra86-scripts" tabindex="-1"><a class="header-anchor" href="#how-to-use-the-tra86-scripts"><span>How to use the tra86 Scripts.</span></a></h2><p>As mentioned earlier, the tra86 toolchain is divided into two main parts: the Tracer and the Analyzer. In its current version, the operation for both is pretty barebones. Here&#39;s what a test run looks like.</p><ul><li>We have a C++/Rust source code file.</li><li>We use either clang or rustc to get the assembly output.</li><li>Once we have the assembly output, we assemble it into an object passing debugging flags.</li><li>We invoke the linker to link header files into this object, creating an executable.</li><li>We invoke GDB, stage this executable, and attach the Python Tracer script. The script takes over, stepping into each instruction and executing the program through GDB, and recording the relevant instruction + metadata into a new file. Once the script is attached, the process is completely automated.</li><li>Once the execution ends, the user can check the trace file generated. Another python script, the analyzer, can take this trace file as an input, and give relevant performance data.</li></ul><h3 id="tracer-instructions" tabindex="-1"><a class="header-anchor" href="#tracer-instructions"><span>Tracer Instructions</span></a></h3><p>The instructions to compile a C++ source and a RUST source differ. However, staging them on GDB and attaching the Python script is the same.</p><h4 id="rust-instructions" tabindex="-1"><a class="header-anchor" href="#rust-instructions"><span>RUST Instructions</span></a></h4><p>Assuming <code>main.rs</code> is the name of the file. Note: these set of commands only work on an x86 architecture machine.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">$ rustc --target=x86_64-unknown-linux-gnu --emit=asm -o main.s main.rs</span>
<span class="line">$ as -o main.o main.s</span>
<span class="line">$ clang ~/.rustup/toolchains/*/lib/libstd-*.so  main.o -g -o test-rust</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-instructions" tabindex="-1"><a class="header-anchor" href="#c-instructions"><span>C++ Instructions</span></a></h4><p>Assuming <code>main.cpp</code> is the name of the file</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">$ clang++ -S -o main.s main.cpp    # Step 1: Generate assembly with debugging info</span>
<span class="line">$ clang++ -g -o test-cpp main.s           # Step 2: Assemble and link with debugging info</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Since <code>clang++</code> is the default compiler for C++, the linking is done automatically. However, linking for RUST has to be done in an extra manual step, since <code>rustc</code> does not support intermediate compiling as described above.</p><p>Read this <a href="https://stackoverflow.com/questions/77568383/how-to-compile-x86-assembly-generated-via-rustc-into-an-executable" target="_blank" rel="noopener noreferrer">StackOverflow Post</a> for more insights ðŸ˜ƒ</p><h4 id="tracer-script-instructions" tabindex="-1"><a class="header-anchor" href="#tracer-script-instructions"><span>Tracer Script Instructions</span></a></h4><p>The following is the Python script for the tracer. We assume it&#39;s named <code>pygdb.py</code> for the following instructions.</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> gdb</span>
<span class="line"><span class="token keyword">import</span> time</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Define the file path where you want to save the log</span></span>
<span class="line">log_file_path <span class="token operator">=</span> <span class="token string">&quot;./gdb_asm.txt&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Define the maximum time to wait in seconds before switching to &quot;ni&quot;</span></span>
<span class="line">max_stuck_time <span class="token operator">=</span> <span class="token number">10</span>  <span class="token comment"># Adjust this value as needed</span></span>
<span class="line"></span>
<span class="line">si <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">max_si <span class="token operator">=</span> <span class="token number">500</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">log_asm_event</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    pc <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>gdb<span class="token punctuation">.</span>parse_and_eval<span class="token punctuation">(</span><span class="token string">&quot;$pc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    instruction <span class="token operator">=</span> gdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;x/i &quot;</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>pc<span class="token punctuation">)</span><span class="token punctuation">,</span> to_string<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>log_file_path<span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> log_file<span class="token punctuation">:</span></span>
<span class="line">        log_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">hex</span><span class="token punctuation">(</span>pc<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>instruction<span class="token punctuation">}</span></span><span class="token string">\\n&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Connect the stop event to the log_asm_event function</span></span>
<span class="line">gdb<span class="token punctuation">.</span>events<span class="token punctuation">.</span>stop<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>log_asm_event<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Initialize timer</span></span>
<span class="line">start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Stepping through the program continuously until it terminates</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> si <span class="token operator">&lt;</span> max_si<span class="token punctuation">:</span></span>
<span class="line">        gdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;si&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        si <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">elif</span> start_time <span class="token operator">&gt;</span> max_stuck_time<span class="token punctuation">:</span></span>
<span class="line">        gdb<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">&quot;ni&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># Reset timer if execution is not stuck</span></span>
<span class="line">    start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    si <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.001</span><span class="token punctuation">)</span>  <span class="token comment"># Add a small delay to avoid consuming too much CPU</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once we have this in the same directory, here are the instructions.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">$ gdb ./test-cpp</span>
<span class="line">(gdb)$ b main</span>
<span class="line">(gdb)$ run</span>
<span class="line">(gdb)$ source ./pygdb.py</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sometimes, if the script gets stuck, <code>si</code> can be done manually. The script will continue to record information (instructions + metadata) as you go manually.</p><p>The script can also be modified to only do ni (next instruction), if we do not want to trace header files/dependencies/other user files in the codebase. Or the automation can also be completely disabled, with just the functionality to record the instruction + metadata.</p><h3 id="analyzer-instructions" tabindex="-1"><a class="header-anchor" href="#analyzer-instructions"><span>Analyzer Instructions</span></a></h3><p>The analyzer is another simple Python script.</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token triple-quoted-string string">&#39;&#39;&#39;</span>
<span class="line">x86 Assembly Tracer: Analyzation Part</span>
<span class="line">Kushagra Srivastava (https://skushagra.com)</span>
<span class="line"></span>
<span class="line">The following Python Code Analyzes the Trace Inputs</span>
<span class="line">from the PyGDB Program in this repository.</span>
<span class="line">&#39;&#39;&#39;</span></span>
<span class="line"><span class="token keyword">import</span> math</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> sys</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">clockCycles</span><span class="token punctuation">:</span></span>
<span class="line">	<span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">		<span class="token comment"># https://stackoverflow.com/questions/692718/how-many-cpu-cycles-are-needed-for-each-assembly-instruction</span></span>
<span class="line">		self<span class="token punctuation">.</span>cycleHash <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token string">&quot;mov&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;push&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;pop&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cltq&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cdqe&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cwd&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cdq&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cqo&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;pushf&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;popf&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;movl&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;add&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;addl&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;addq&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;sub&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;subl&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;subq&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;and&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;or&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;xor&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;adc&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;sbb&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cmp&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;no_jmp&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment"># No Jump is just a compare</span></span>
<span class="line">			<span class="token string">&quot;cmpq&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;inc&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;dec&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;neg&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;not&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;div&quot;</span><span class="token punctuation">:</span> <span class="token number">17</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;idiv&quot;</span><span class="token punctuation">:</span> <span class="token number">17</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;jmp&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;jmpq&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;jns&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;call&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;jne&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;jge&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;je&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;jl&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;jb&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;jbe&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;js&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;ja&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;jg&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;retn&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;retq&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;retf&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;ret&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;bnd&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;loop&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;wait&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;callq&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cmpl&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cmpxchg&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cmpb&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;lea&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;endbr64&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;orq&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;test&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;testq&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;testb&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;testl&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;move&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cmove&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;movzwl&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;movzbl&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;movq&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;movzx&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;movsx&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;lds&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;les&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;lfs&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;lgs&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;lss&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;nop&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;nopw&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;nopl&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;xchg&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;xlat&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;pushf&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;popf&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;pusha&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;popa&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;pushad&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;popad&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;pushq&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;popq&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;mul&quot;</span><span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;imul&quot;</span><span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cbw&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cwde&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;shr&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;shl&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;sar&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;sal&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;wait&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;leave&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;leaveq&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;punpcklqdq&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;set&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;setne&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;setcc&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cmova&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cmov&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;cmovcc&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;syscall&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;movups&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;orl&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">def</span> <span class="token function">getCycle</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">		<span class="token keyword">if</span> command <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>cycleHash<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">			<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Unknown Command </span><span class="token interpolation"><span class="token punctuation">{</span>command<span class="token punctuation">}</span></span><span class="token string">, big oopsie&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">return</span> <span class="token number">0</span></span>
<span class="line">		<span class="token keyword">return</span> self<span class="token punctuation">.</span>cycleHash<span class="token punctuation">[</span>command<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">inst</span><span class="token punctuation">:</span></span>
<span class="line">	<span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">		self<span class="token punctuation">.</span>instructions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">		self<span class="token punctuation">.</span>debugger <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">		self<span class="token punctuation">.</span>cycleInstructions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">		self<span class="token punctuation">.</span>numOperations <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">		self<span class="token punctuation">.</span>totalCycles <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">		self<span class="token punctuation">.</span>totalLines <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">		self<span class="token punctuation">.</span>jmpInQuestion <span class="token operator">=</span> <span class="token boolean">False</span></span>
<span class="line">		self<span class="token punctuation">.</span>lastJmpLocation <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">		self<span class="token punctuation">.</span>typeOfJmp <span class="token operator">=</span> <span class="token string">&quot;jmp&quot;</span></span>
<span class="line">	<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">		<span class="token keyword">if</span> line <span class="token operator">!=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">:</span></span>
<span class="line">			self<span class="token punctuation">.</span>debugger<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">)</span></span>
<span class="line">			lineParts <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>lineParts<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">:</span></span>
<span class="line">				<span class="token keyword">if</span> lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>instructions<span class="token punctuation">:</span></span>
<span class="line">						self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span>lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">				<span class="token keyword">if</span> lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;jg&quot;</span> <span class="token keyword">or</span> lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;jge&quot;</span> <span class="token keyword">or</span> lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;jg&quot;</span> <span class="token keyword">or</span> lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;jle&quot;</span> <span class="token keyword">or</span> lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;jne&quot;</span> <span class="token keyword">or</span> lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;jl&quot;</span><span class="token punctuation">:</span></span>
<span class="line">					self<span class="token punctuation">.</span>jmpInQuestion <span class="token operator">=</span> <span class="token boolean">True</span></span>
<span class="line">					self<span class="token punctuation">.</span>lastJmpLocation <span class="token operator">=</span> lineParts<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span></span>
<span class="line">					self<span class="token punctuation">.</span>typeOfJmp <span class="token operator">=</span> lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span></span>
<span class="line">					<span class="token keyword">return</span></span>
<span class="line">				<span class="token keyword">if</span> self<span class="token punctuation">.</span>jmpInQuestion <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">					<span class="token keyword">if</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>c <span class="token keyword">for</span> c <span class="token keyword">in</span> lineParts<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">if</span> c <span class="token operator">!=</span> <span class="token string">&#39;:&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> self<span class="token punctuation">.</span>lastJmpLocation<span class="token punctuation">:</span></span>
<span class="line">						self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span>self<span class="token punctuation">.</span>typeOfJmp<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">						self<span class="token punctuation">.</span>jmpInQuestion <span class="token operator">=</span> <span class="token boolean">False</span></span>
<span class="line">					<span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">						<span class="token keyword">if</span> <span class="token string">&quot;no_jmp&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>instructions<span class="token punctuation">:</span></span>
<span class="line">							self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span><span class="token string">&quot;no_jmp&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">						self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span><span class="token string">&quot;no_jmp&quot;</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">						self<span class="token punctuation">.</span>jmpInQuestion <span class="token operator">=</span> <span class="token boolean">False</span></span>
<span class="line">				self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span>lineParts<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">				self<span class="token punctuation">.</span>numOperations <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">			<span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">				<span class="token keyword">if</span> lineParts<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>lineParts<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>instructions<span class="token punctuation">:</span></span>
<span class="line">					self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span>lineParts<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>lineParts<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">				self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span>lineParts<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>lineParts<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">	<span class="token keyword">def</span> <span class="token function">printDebug</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Wow you printed </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>instructions<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">def</span> <span class="token function">analyzeTraces</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> trace_file<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">		hasher <span class="token operator">=</span> clockCycles<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">for</span> oneInst <span class="token keyword">in</span> self<span class="token punctuation">.</span>instructions<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">			curCycle <span class="token operator">=</span> hasher<span class="token punctuation">.</span>getCycle<span class="token punctuation">(</span>oneInst<span class="token punctuation">)</span></span>
<span class="line">			self<span class="token punctuation">.</span>totalCycles <span class="token operator">+=</span> curCycle <span class="token operator">*</span> self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span>oneInst<span class="token punctuation">]</span></span>
<span class="line">			self<span class="token punctuation">.</span>cycleInstructions<span class="token punctuation">[</span>oneInst<span class="token punctuation">]</span> <span class="token operator">=</span> curCycle <span class="token operator">*</span> self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span>oneInst<span class="token punctuation">]</span></span>
<span class="line">			self<span class="token punctuation">.</span>totalLines <span class="token operator">+=</span> self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span>oneInst<span class="token punctuation">]</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*********************&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Statistics for </span><span class="token interpolation"><span class="token punctuation">{</span>trace_file<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Clock Cycles: </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>totalCycles<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Number of lines exec: </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>totalLines<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Number of different asm operations: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>instructions<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">		cpi <span class="token operator">=</span> self<span class="token punctuation">.</span>totalCycles <span class="token operator">/</span> self<span class="token punctuation">.</span>totalLines <span class="token keyword">if</span> self<span class="token punctuation">.</span>totalLines <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token number">0</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Cycles Per Instruction: </span><span class="token interpolation"><span class="token punctuation">{</span>cpi<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Breakdown of each instruction:&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Instruction | Number of times | Cycles&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">for</span> oneInst <span class="token keyword">in</span> self<span class="token punctuation">.</span>instructions<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">			<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>oneInst<span class="token punctuation">}</span></span><span class="token string"> | </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>instructions<span class="token punctuation">[</span>oneInst<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> | </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>cycleInstructions<span class="token punctuation">[</span>oneInst<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*********************&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token string">&quot;no_jmp&quot;</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>instructions<span class="token punctuation">:</span></span>
<span class="line">			<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Note: In the above table, if a jmp with compare was made (e.g., jge), but that jmp did not occur, we denote it as no_jmp with 2 clock cycles (Source: Agner Fog)&quot;</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*********************&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>curInst<span class="token punctuation">,</span> trace_files<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">	<span class="token keyword">for</span> trace <span class="token keyword">in</span> trace_files<span class="token punctuation">:</span></span>
<span class="line">		<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>trace<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">			<span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span></span>
<span class="line">				curInst<span class="token punctuation">.</span>add<span class="token punctuation">(</span>line<span class="token punctuation">)</span></span>
<span class="line">		curInst<span class="token punctuation">.</span>analyzeTraces<span class="token punctuation">(</span>trace<span class="token punctuation">)</span></span>
<span class="line">		curInst <span class="token operator">=</span> inst<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span></span>
<span class="line">		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Usage: python3 analyzer &lt;TRACE FILES&gt;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">	curInst <span class="token operator">=</span> inst<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	trace_files <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line">	main<span class="token punctuation">(</span>curInst<span class="token punctuation">,</span> trace_files<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(Clock cycle data taken from IA32 and IA64 reference manual for a Intel Pentium Processor).</p><p>Assuming your trace file is named trace.py</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">$ python3 analyzer trace.py</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The analyzer can also analyze multiple trace files (if the above script was used to analyze multiple programs, source code, etc.)</p>`,28)]))}const i=s(e,[["render",o],["__file","software.html.vue"]]),u=JSON.parse('{"path":"/software.html","title":"Software","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"How to use the tra86 Scripts.","slug":"how-to-use-the-tra86-scripts","link":"#how-to-use-the-tra86-scripts","children":[{"level":3,"title":"Tracer Instructions","slug":"tracer-instructions","link":"#tracer-instructions","children":[]},{"level":3,"title":"Analyzer Instructions","slug":"analyzer-instructions","link":"#analyzer-instructions","children":[]}]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"software.md"}');export{i as comp,u as data};
